{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-dnd-action/src/helpers/dispatcher.js","../../node_modules/svelte-dnd-action/src/constants.js","../../node_modules/svelte-dnd-action/src/helpers/intersection.js","../../node_modules/svelte-dnd-action/src/helpers/listUtil.js","../../node_modules/svelte-dnd-action/src/helpers/scroller.js","../../node_modules/svelte-dnd-action/src/helpers/util.js","../../node_modules/svelte-dnd-action/src/helpers/observer.js","../../node_modules/svelte-dnd-action/src/helpers/windowScroller.js","../../node_modules/svelte-dnd-action/src/featureFlags.js","../../node_modules/svelte-dnd-action/src/helpers/styler.js","../../node_modules/svelte-dnd-action/src/pointerAction.js","../../node_modules/svelte-dnd-action/src/helpers/svelteNodeClone.js","../../node_modules/svelte-dnd-action/src/helpers/aria.js","../../node_modules/svelte-dnd-action/src/keyboardAction.js","../../node_modules/svelte-dnd-action/src/action.js","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/animate/index.mjs","../../node_modules/svelte/store/index.mjs","../../svelte-app/Tile.svelte","../../svelte-app/Square.svelte","../../svelte-app/Led.svelte","../../svelte-app/LedOut.svelte","../../svelte-app/App.svelte","../../svelte-app/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","// external events\nconst FINALIZE_EVENT_NAME = \"finalize\";\nconst CONSIDER_EVENT_NAME = \"consider\";\n\n/**\n * @typedef {Object} Info\n * @property {string} trigger\n * @property {string} id\n * @property {string} source\n * @param {Node} el\n * @param {Array} items\n * @param {Info} info\n */\nexport function dispatchFinalizeEvent(el, items, info) {\n    el.dispatchEvent(\n        new CustomEvent(FINALIZE_EVENT_NAME, {\n            detail: {items, info}\n        })\n    );\n}\n\n/**\n * Dispatches a consider event\n * @param {Node} el\n * @param {Array} items\n * @param {Info} info\n */\nexport function dispatchConsiderEvent(el, items, info) {\n    el.dispatchEvent(\n        new CustomEvent(CONSIDER_EVENT_NAME, {\n            detail: {items, info}\n        })\n    );\n}\n\n// internal events\nexport const DRAGGED_ENTERED_EVENT_NAME = \"draggedEntered\";\nexport const DRAGGED_LEFT_EVENT_NAME = \"draggedLeft\";\nexport const DRAGGED_OVER_INDEX_EVENT_NAME = \"draggedOverIndex\";\nexport const DRAGGED_LEFT_DOCUMENT_EVENT_NAME = \"draggedLeftDocument\";\n\nexport const DRAGGED_LEFT_TYPES = {\n    LEFT_FOR_ANOTHER: \"leftForAnother\",\n    OUTSIDE_OF_ANY: \"outsideOfAny\"\n};\n\nexport function dispatchDraggedElementEnteredContainer(containerEl, indexObj, draggedEl) {\n    containerEl.dispatchEvent(\n        new CustomEvent(DRAGGED_ENTERED_EVENT_NAME, {\n            detail: {indexObj, draggedEl}\n        })\n    );\n}\n\n/**\n * @param containerEl - the dropzone the element left\n * @param draggedEl - the dragged element\n * @param theOtherDz - the new dropzone the element entered\n */\nexport function dispatchDraggedElementLeftContainerForAnother(containerEl, draggedEl, theOtherDz) {\n    containerEl.dispatchEvent(\n        new CustomEvent(DRAGGED_LEFT_EVENT_NAME, {\n            detail: {draggedEl, type: DRAGGED_LEFT_TYPES.LEFT_FOR_ANOTHER, theOtherDz}\n        })\n    );\n}\n\nexport function dispatchDraggedElementLeftContainerForNone(containerEl, draggedEl) {\n    containerEl.dispatchEvent(\n        new CustomEvent(DRAGGED_LEFT_EVENT_NAME, {\n            detail: {draggedEl, type: DRAGGED_LEFT_TYPES.OUTSIDE_OF_ANY}\n        })\n    );\n}\nexport function dispatchDraggedElementIsOverIndex(containerEl, indexObj, draggedEl) {\n    containerEl.dispatchEvent(\n        new CustomEvent(DRAGGED_OVER_INDEX_EVENT_NAME, {\n            detail: {indexObj, draggedEl}\n        })\n    );\n}\nexport function dispatchDraggedLeftDocument(draggedEl) {\n    window.dispatchEvent(\n        new CustomEvent(DRAGGED_LEFT_DOCUMENT_EVENT_NAME, {\n            detail: {draggedEl}\n        })\n    );\n}\n","import {DRAGGED_ENTERED_EVENT_NAME, DRAGGED_LEFT_EVENT_NAME, DRAGGED_OVER_INDEX_EVENT_NAME} from \"./helpers/dispatcher\";\n\nexport const TRIGGERS = {\n    DRAG_STARTED: \"dragStarted\",\n    DRAGGED_ENTERED: DRAGGED_ENTERED_EVENT_NAME,\n    DRAGGED_ENTERED_ANOTHER: \"dragEnteredAnother\",\n    DRAGGED_OVER_INDEX: DRAGGED_OVER_INDEX_EVENT_NAME,\n    DRAGGED_LEFT: DRAGGED_LEFT_EVENT_NAME,\n    DRAGGED_LEFT_ALL: \"draggedLeftAll\",\n    DROPPED_INTO_ZONE: \"droppedIntoZone\",\n    DROPPED_INTO_ANOTHER: \"droppedIntoAnother\",\n    DROPPED_OUTSIDE_OF_ANY: \"droppedOutsideOfAny\",\n    DRAG_STOPPED: \"dragStopped\"\n};\n\nexport const SOURCES = {\n    POINTER: \"pointer\",\n    KEYBOARD: \"keyboard\"\n};\n\nexport const SHADOW_ITEM_MARKER_PROPERTY_NAME = \"isDndShadowItem\";\nexport const SHADOW_ELEMENT_ATTRIBUTE_NAME = \"data-is-dnd-shadow-item-internal\";\nexport const SHADOW_ELEMENT_HINT_ATTRIBUTE_NAME = \"data-is-dnd-shadow-item-hint\";\nexport const SHADOW_PLACEHOLDER_ITEM_ID = \"id:dnd-shadow-placeholder-0000\";\nexport const DRAGGED_ELEMENT_ID = \"dnd-action-dragged-el\";\n\nexport let ITEM_ID_KEY = \"id\";\nlet activeDndZoneCount = 0;\nexport function incrementActiveDropZoneCount() {\n    activeDndZoneCount++;\n}\nexport function decrementActiveDropZoneCount() {\n    if (activeDndZoneCount === 0) {\n        throw new Error(\"Bug! trying to decrement when there are no dropzones\");\n    }\n    activeDndZoneCount--;\n}\n\n/**\n * Allows using another key instead of \"id\" in the items data. This is global and applies to all dndzones.\n * Has to be called when there are no rendered dndzones whatsoever.\n * @param {String} newKeyName\n * @throws {Error} if it was called when there are rendered dndzones or if it is given the wrong type (not a string)\n */\nexport function overrideItemIdKeyNameBeforeInitialisingDndZones(newKeyName) {\n    if (activeDndZoneCount > 0) {\n        throw new Error(\"can only override the id key before initialising any dndzone\");\n    }\n    if (typeof newKeyName !== \"string\") {\n        throw new Error(\"item id key has to be a string\");\n    }\n    printDebug(() => [\"overriding item id key name\", newKeyName]);\n    ITEM_ID_KEY = newKeyName;\n}\n\nexport const isOnServer = typeof window === \"undefined\";\n\nexport let printDebug = () => {};\n\n/**\n * Allows the user to show/hide console debug output\n * * @param {boolean} isDebug\n */\nexport function setDebugMode(isDebug) {\n    if (isDebug) {\n        printDebug = (generateMessage, logFunction = console.debug) => {\n            const message = generateMessage();\n            if (Array.isArray(message)) {\n                logFunction(...message);\n            } else {\n                logFunction(message);\n            }\n        };\n    } else {\n        printDebug = () => {};\n    }\n}\n","// This is based off https://stackoverflow.com/questions/27745438/how-to-compute-getboundingclientrect-without-considering-transforms/57876601#57876601\n// It removes the transforms that are potentially applied by the flip animations\n/**\n * Gets the bounding rect but removes transforms (ex: flip animation)\n * @param {HTMLElement} el\n * @return {{top: number, left: number, bottom: number, right: number}}\n */\nexport function getBoundingRectNoTransforms(el) {\n    let ta;\n    const rect = el.getBoundingClientRect();\n    const style = getComputedStyle(el);\n    const tx = style.transform;\n\n    if (tx) {\n        let sx, sy, dx, dy;\n        if (tx.startsWith(\"matrix3d(\")) {\n            ta = tx.slice(9, -1).split(/, /);\n            sx = +ta[0];\n            sy = +ta[5];\n            dx = +ta[12];\n            dy = +ta[13];\n        } else if (tx.startsWith(\"matrix(\")) {\n            ta = tx.slice(7, -1).split(/, /);\n            sx = +ta[0];\n            sy = +ta[3];\n            dx = +ta[4];\n            dy = +ta[5];\n        } else {\n            return rect;\n        }\n\n        const to = style.transformOrigin;\n        const x = rect.x - dx - (1 - sx) * parseFloat(to);\n        const y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(\" \") + 1));\n        const w = sx ? rect.width / sx : el.offsetWidth;\n        const h = sy ? rect.height / sy : el.offsetHeight;\n        return {\n            x: x,\n            y: y,\n            width: w,\n            height: h,\n            top: y,\n            right: x + w,\n            bottom: y + h,\n            left: x\n        };\n    } else {\n        return rect;\n    }\n}\n\n/**\n * Gets the absolute bounding rect (accounts for the window's scroll position and removes transforms)\n * @param {HTMLElement} el\n * @return {{top: number, left: number, bottom: number, right: number}}\n */\nexport function getAbsoluteRectNoTransforms(el) {\n    const rect = getBoundingRectNoTransforms(el);\n    return {\n        top: rect.top + window.scrollY,\n        bottom: rect.bottom + window.scrollY,\n        left: rect.left + window.scrollX,\n        right: rect.right + window.scrollX\n    };\n}\n\n/**\n * Gets the absolute bounding rect (accounts for the window's scroll position)\n * @param {HTMLElement} el\n * @return {{top: number, left: number, bottom: number, right: number}}\n */\nexport function getAbsoluteRect(el) {\n    const rect = el.getBoundingClientRect();\n    return {\n        top: rect.top + window.scrollY,\n        bottom: rect.bottom + window.scrollY,\n        left: rect.left + window.scrollX,\n        right: rect.right + window.scrollX\n    };\n}\n\n/**\n * finds the center :)\n * @typedef {Object} Rect\n * @property {number} top\n * @property {number} bottom\n * @property {number} left\n * @property {number} right\n * @param {Rect} rect\n * @return {{x: number, y: number}}\n */\nexport function findCenter(rect) {\n    return {\n        x: (rect.left + rect.right) / 2,\n        y: (rect.top + rect.bottom) / 2\n    };\n}\n\n/**\n * @typedef {Object} Point\n * @property {number} x\n * @property {number} y\n * @param {Point} pointA\n * @param {Point} pointB\n * @return {number}\n */\nfunction calcDistance(pointA, pointB) {\n    return Math.sqrt(Math.pow(pointA.x - pointB.x, 2) + Math.pow(pointA.y - pointB.y, 2));\n}\n\n/**\n * @param {Point} point\n * @param {Rect} rect\n * @return {boolean|boolean}\n */\nexport function isPointInsideRect(point, rect) {\n    return point.y <= rect.bottom && point.y >= rect.top && point.x >= rect.left && point.x <= rect.right;\n}\n\n/**\n * find the absolute coordinates of the center of a dom element\n * @param el {HTMLElement}\n * @returns {{x: number, y: number}}\n */\nexport function findCenterOfElement(el) {\n    return findCenter(getAbsoluteRect(el));\n}\n\n/**\n * @param {HTMLElement} elA\n * @param {HTMLElement} elB\n * @return {boolean}\n */\nexport function isCenterOfAInsideB(elA, elB) {\n    const centerOfA = findCenterOfElement(elA);\n    const rectOfB = getAbsoluteRectNoTransforms(elB);\n    return isPointInsideRect(centerOfA, rectOfB);\n}\n\n/**\n * @param {HTMLElement|ChildNode} elA\n * @param {HTMLElement|ChildNode} elB\n * @return {number}\n */\nexport function calcDistanceBetweenCenters(elA, elB) {\n    const centerOfA = findCenterOfElement(elA);\n    const centerOfB = findCenterOfElement(elB);\n    return calcDistance(centerOfA, centerOfB);\n}\n\n/**\n * @param {HTMLElement} el - the element to check\n * @returns {boolean} - true if the element in its entirety is off screen including the scrollable area (the normal dom events look at the mouse rather than the element)\n */\nexport function isElementOffDocument(el) {\n    const rect = getAbsoluteRect(el);\n    return rect.right < 0 || rect.left > document.documentElement.scrollWidth || rect.bottom < 0 || rect.top > document.documentElement.scrollHeight;\n}\n\n/**\n * If the point is inside the element returns its distances from the sides, otherwise returns null\n * @param {Point} point\n * @param {HTMLElement} el\n * @return {null|{top: number, left: number, bottom: number, right: number}}\n */\nexport function calcInnerDistancesBetweenPointAndSidesOfElement(point, el) {\n    const rect = getAbsoluteRect(el);\n    if (!isPointInsideRect(point, rect)) {\n        return null;\n    }\n    return {\n        top: point.y - rect.top,\n        bottom: rect.bottom - point.y,\n        left: point.x - rect.left,\n        // TODO - figure out what is so special about right (why the rect is too big)\n        right: Math.min(rect.right, document.documentElement.clientWidth) - point.x\n    };\n}\n","import {isCenterOfAInsideB, calcDistanceBetweenCenters, getAbsoluteRectNoTransforms, isPointInsideRect, findCenterOfElement} from \"./intersection\";\nimport {printDebug, SHADOW_ELEMENT_ATTRIBUTE_NAME} from \"../constants\";\n\nlet dzToShadowIndexToRect;\n\n/**\n * Resets the cache that allows for smarter \"would be index\" resolution. Should be called after every drag operation\n */\nexport function resetIndexesCache() {\n    printDebug(() => \"resetting indexes cache\");\n    dzToShadowIndexToRect = new Map();\n}\nresetIndexesCache();\n\n/**\n * Resets the cache that allows for smarter \"would be index\" resolution for a specific dropzone, should be called after the zone was scrolled\n * @param {HTMLElement} dz\n */\nexport function resetIndexesCacheForDz(dz) {\n    printDebug(() => \"resetting indexes cache for dz\");\n    dzToShadowIndexToRect.delete(dz);\n}\n\n/**\n * Caches the coordinates of the shadow element when it's in a certain index in a certain dropzone.\n * Helpful in order to determine \"would be index\" more effectively\n * @param {HTMLElement} dz\n * @return {number} - the shadow element index\n */\nfunction cacheShadowRect(dz) {\n    const shadowElIndex = Array.from(dz.children).findIndex(child => child.getAttribute(SHADOW_ELEMENT_ATTRIBUTE_NAME));\n    if (shadowElIndex >= 0) {\n        if (!dzToShadowIndexToRect.has(dz)) {\n            dzToShadowIndexToRect.set(dz, new Map());\n        }\n        dzToShadowIndexToRect.get(dz).set(shadowElIndex, getAbsoluteRectNoTransforms(dz.children[shadowElIndex]));\n        return shadowElIndex;\n    }\n    return undefined;\n}\n\n/**\n * @typedef {Object} Index\n * @property {number} index - the would be index\n * @property {boolean} isProximityBased - false if the element is actually over the index, true if it is not over it but this index is the closest\n */\n/**\n * Find the index for the dragged element in the list it is dragged over\n * @param {HTMLElement} floatingAboveEl\n * @param {HTMLElement} collectionBelowEl\n * @returns {Index|null} -  if the element is over the container the Index object otherwise null\n */\nexport function findWouldBeIndex(floatingAboveEl, collectionBelowEl) {\n    if (!isCenterOfAInsideB(floatingAboveEl, collectionBelowEl)) {\n        return null;\n    }\n    const children = collectionBelowEl.children;\n    // the container is empty, floating element should be the first\n    if (children.length === 0) {\n        return {index: 0, isProximityBased: true};\n    }\n    const shadowElIndex = cacheShadowRect(collectionBelowEl);\n\n    // the search could be more efficient but keeping it simple for now\n    // a possible improvement: pass in the lastIndex it was found in and check there first, then expand from there\n    for (let i = 0; i < children.length; i++) {\n        if (isCenterOfAInsideB(floatingAboveEl, children[i])) {\n            const cachedShadowRect = dzToShadowIndexToRect.has(collectionBelowEl) && dzToShadowIndexToRect.get(collectionBelowEl).get(i);\n            if (cachedShadowRect) {\n                if (!isPointInsideRect(findCenterOfElement(floatingAboveEl), cachedShadowRect)) {\n                    return {index: shadowElIndex, isProximityBased: false};\n                }\n            }\n            return {index: i, isProximityBased: false};\n        }\n    }\n    // this can happen if there is space around the children so the floating element has\n    //entered the container but not any of the children, in this case we will find the nearest child\n    let minDistanceSoFar = Number.MAX_VALUE;\n    let indexOfMin = undefined;\n    // we are checking all of them because we don't know whether we are dealing with a horizontal or vertical container and where the floating element entered from\n    for (let i = 0; i < children.length; i++) {\n        const distance = calcDistanceBetweenCenters(floatingAboveEl, children[i]);\n        if (distance < minDistanceSoFar) {\n            minDistanceSoFar = distance;\n            indexOfMin = i;\n        }\n    }\n    return {index: indexOfMin, isProximityBased: true};\n}\n","import {calcInnerDistancesBetweenPointAndSidesOfElement} from \"./intersection\";\nconst SCROLL_ZONE_PX = 25;\n\nexport function makeScroller() {\n    let scrollingInfo;\n    function resetScrolling() {\n        scrollingInfo = {directionObj: undefined, stepPx: 0};\n    }\n    resetScrolling();\n    // directionObj {x: 0|1|-1, y:0|1|-1} - 1 means down in y and right in x\n    function scrollContainer(containerEl) {\n        const {directionObj, stepPx} = scrollingInfo;\n        if (directionObj) {\n            containerEl.scrollBy(directionObj.x * stepPx, directionObj.y * stepPx);\n            window.requestAnimationFrame(() => scrollContainer(containerEl));\n        }\n    }\n    function calcScrollStepPx(distancePx) {\n        return SCROLL_ZONE_PX - distancePx;\n    }\n\n    /**\n     * If the pointer is next to the sides of the element to scroll, will trigger scrolling\n     * Can be called repeatedly with updated pointer and elementToScroll values without issues\n     * @return {boolean} - true if scrolling was needed\n     */\n    function scrollIfNeeded(pointer, elementToScroll) {\n        if (!elementToScroll) {\n            return false;\n        }\n        const distances = calcInnerDistancesBetweenPointAndSidesOfElement(pointer, elementToScroll);\n        if (distances === null) {\n            resetScrolling();\n            return false;\n        }\n        const isAlreadyScrolling = !!scrollingInfo.directionObj;\n        let [scrollingVertically, scrollingHorizontally] = [false, false];\n        // vertical\n        if (elementToScroll.scrollHeight > elementToScroll.clientHeight) {\n            if (distances.bottom < SCROLL_ZONE_PX) {\n                scrollingVertically = true;\n                scrollingInfo.directionObj = {x: 0, y: 1};\n                scrollingInfo.stepPx = calcScrollStepPx(distances.bottom);\n            } else if (distances.top < SCROLL_ZONE_PX) {\n                scrollingVertically = true;\n                scrollingInfo.directionObj = {x: 0, y: -1};\n                scrollingInfo.stepPx = calcScrollStepPx(distances.top);\n            }\n            if (!isAlreadyScrolling && scrollingVertically) {\n                scrollContainer(elementToScroll);\n                return true;\n            }\n        }\n        // horizontal\n        if (elementToScroll.scrollWidth > elementToScroll.clientWidth) {\n            if (distances.right < SCROLL_ZONE_PX) {\n                scrollingHorizontally = true;\n                scrollingInfo.directionObj = {x: 1, y: 0};\n                scrollingInfo.stepPx = calcScrollStepPx(distances.right);\n            } else if (distances.left < SCROLL_ZONE_PX) {\n                scrollingHorizontally = true;\n                scrollingInfo.directionObj = {x: -1, y: 0};\n                scrollingInfo.stepPx = calcScrollStepPx(distances.left);\n            }\n            if (!isAlreadyScrolling && scrollingHorizontally) {\n                scrollContainer(elementToScroll);\n                return true;\n            }\n        }\n        resetScrolling();\n        return false;\n    }\n\n    return {\n        scrollIfNeeded,\n        resetScrolling\n    };\n}\n","/**\n * @param {Object} object\n * @return {string}\n */\nexport function toString(object) {\n    return JSON.stringify(object, null, 2);\n}\n\n/**\n * Finds the depth of the given node in the DOM tree\n * @param {HTMLElement} node\n * @return {number} - the depth of the node\n */\nexport function getDepth(node) {\n    if (!node) {\n        throw new Error(\"cannot get depth of a falsy node\");\n    }\n    return _getDepth(node, 0);\n}\nfunction _getDepth(node, countSoFar = 0) {\n    if (!node.parentElement) {\n        return countSoFar - 1;\n    }\n    return _getDepth(node.parentElement, countSoFar + 1);\n}\n\n/**\n * A simple util to shallow compare objects quickly, it doesn't validate the arguments so pass objects in\n * @param {Object} objA\n * @param {Object} objB\n * @return {boolean} - true if objA and objB are shallow equal\n */\nexport function areObjectsShallowEqual(objA, objB) {\n    if (Object.keys(objA).length !== Object.keys(objB).length) {\n        return false;\n    }\n    for (const keyA in objA) {\n        if (!{}.hasOwnProperty.call(objB, keyA) || objB[keyA] !== objA[keyA]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Shallow compares two arrays\n * @param arrA\n * @param arrB\n * @return {boolean} - whether the arrays are shallow equal\n */\nexport function areArraysShallowEqualSameOrder(arrA, arrB) {\n    if (arrA.length !== arrB.length) {\n        return false;\n    }\n    for (let i = 0; i < arrA.length; i++) {\n        if (arrA[i] !== arrB[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n","import {findWouldBeIndex, resetIndexesCache, resetIndexesCacheForDz} from \"./listUtil\";\nimport {findCenterOfElement, isElementOffDocument} from \"./intersection\";\nimport {\n    dispatchDraggedElementEnteredContainer,\n    dispatchDraggedElementLeftContainerForAnother,\n    dispatchDraggedElementLeftContainerForNone,\n    dispatchDraggedLeftDocument,\n    dispatchDraggedElementIsOverIndex\n} from \"./dispatcher\";\nimport {makeScroller} from \"./scroller\";\nimport {getDepth} from \"./util\";\nimport {printDebug} from \"../constants\";\n\nconst INTERVAL_MS = 200;\nconst TOLERANCE_PX = 10;\nconst {scrollIfNeeded, resetScrolling} = makeScroller();\nlet next;\n\n/**\n * Tracks the dragged elements and performs the side effects when it is dragged over a drop zone (basically dispatching custom-events scrolling)\n * @param {Set<HTMLElement>} dropZones\n * @param {HTMLElement} draggedEl\n * @param {number} [intervalMs = INTERVAL_MS]\n */\nexport function observe(draggedEl, dropZones, intervalMs = INTERVAL_MS) {\n    // initialization\n    let lastDropZoneFound;\n    let lastIndexFound;\n    let lastIsDraggedInADropZone = false;\n    let lastCentrePositionOfDragged;\n    // We are sorting to make sure that in case of nested zones of the same type the one \"on top\" is considered first\n    const dropZonesFromDeepToShallow = Array.from(dropZones).sort((dz1, dz2) => getDepth(dz2) - getDepth(dz1));\n\n    /**\n     * The main function in this module. Tracks where everything is/ should be a take the actions\n     */\n    function andNow() {\n        const currentCenterOfDragged = findCenterOfElement(draggedEl);\n        const scrolled = scrollIfNeeded(currentCenterOfDragged, lastDropZoneFound);\n        // we only want to make a new decision after the element was moved a bit to prevent flickering\n        if (\n            !scrolled &&\n            lastCentrePositionOfDragged &&\n            Math.abs(lastCentrePositionOfDragged.x - currentCenterOfDragged.x) < TOLERANCE_PX &&\n            Math.abs(lastCentrePositionOfDragged.y - currentCenterOfDragged.y) < TOLERANCE_PX\n        ) {\n            next = window.setTimeout(andNow, intervalMs);\n            return;\n        }\n        if (isElementOffDocument(draggedEl)) {\n            printDebug(() => \"off document\");\n            dispatchDraggedLeftDocument(draggedEl);\n            return;\n        }\n\n        lastCentrePositionOfDragged = currentCenterOfDragged;\n        // this is a simple algorithm, potential improvement: first look at lastDropZoneFound\n        let isDraggedInADropZone = false;\n        for (const dz of dropZonesFromDeepToShallow) {\n            if (scrolled) resetIndexesCacheForDz(lastDropZoneFound);\n            const indexObj = findWouldBeIndex(draggedEl, dz);\n            if (indexObj === null) {\n                // it is not inside\n                continue;\n            }\n            const {index} = indexObj;\n            isDraggedInADropZone = true;\n            // the element is over a container\n            if (dz !== lastDropZoneFound) {\n                lastDropZoneFound && dispatchDraggedElementLeftContainerForAnother(lastDropZoneFound, draggedEl, dz);\n                dispatchDraggedElementEnteredContainer(dz, indexObj, draggedEl);\n                lastDropZoneFound = dz;\n            } else if (index !== lastIndexFound) {\n                dispatchDraggedElementIsOverIndex(dz, indexObj, draggedEl);\n                lastIndexFound = index;\n            }\n            // we handle looping with the 'continue' statement above\n            break;\n        }\n        // the first time the dragged element is not in any dropzone we need to notify the last dropzone it was in\n        if (!isDraggedInADropZone && lastIsDraggedInADropZone && lastDropZoneFound) {\n            dispatchDraggedElementLeftContainerForNone(lastDropZoneFound, draggedEl);\n            lastDropZoneFound = undefined;\n            lastIndexFound = undefined;\n            lastIsDraggedInADropZone = false;\n        } else {\n            lastIsDraggedInADropZone = true;\n        }\n        next = window.setTimeout(andNow, intervalMs);\n    }\n    andNow();\n}\n\n// assumption - we can only observe one dragged element at a time, this could be changed in the future\nexport function unobserve() {\n    printDebug(() => \"unobserving\");\n    clearTimeout(next);\n    resetScrolling();\n    resetIndexesCache();\n}\n","import {makeScroller} from \"./scroller\";\nimport {printDebug} from \"../constants\";\nimport {resetIndexesCache} from \"./listUtil\";\n\nconst INTERVAL_MS = 300;\nlet mousePosition;\n\n/**\n * Do not use this! it is visible for testing only until we get over the issue Cypress not triggering the mousemove listeners\n * // TODO - make private (remove export)\n * @param {{clientX: number, clientY: number}} e\n */\nexport function updateMousePosition(e) {\n    const c = e.touches ? e.touches[0] : e;\n    mousePosition = {x: c.clientX, y: c.clientY};\n}\nconst {scrollIfNeeded, resetScrolling} = makeScroller();\nlet next;\n\nfunction loop() {\n    if (mousePosition) {\n        const scrolled = scrollIfNeeded(mousePosition, document.documentElement);\n        if (scrolled) resetIndexesCache();\n    }\n    next = window.setTimeout(loop, INTERVAL_MS);\n}\n\n/**\n * will start watching the mouse pointer and scroll the window if it goes next to the edges\n */\nexport function armWindowScroller() {\n    printDebug(() => \"arming window scroller\");\n    window.addEventListener(\"mousemove\", updateMousePosition);\n    window.addEventListener(\"touchmove\", updateMousePosition);\n    loop();\n}\n\n/**\n * will stop watching the mouse pointer and won't scroll the window anymore\n */\nexport function disarmWindowScroller() {\n    printDebug(() => \"disarming window scroller\");\n    window.removeEventListener(\"mousemove\", updateMousePosition);\n    window.removeEventListener(\"touchmove\", updateMousePosition);\n    mousePosition = undefined;\n    window.clearTimeout(next);\n    resetScrolling();\n}\n","/**\n * @type {{USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT: string}}\n */\nexport const FEATURE_FLAG_NAMES = Object.freeze({\n    // This flag exists as a workaround for issue 454 (basically a browser bug) - seems like these rect values take time to update when in grid layout. Setting it to true can cause strange behaviour in the REPL for non-grid zones, see issue 470\n    USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT: \"USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT\"\n});\n\nconst featureFlagsMap = {\n    [FEATURE_FLAG_NAMES.USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT]: false\n};\n\n/**\n * @param {FEATURE_FLAG_NAMES} flagName\n * @param {boolean} flagValue\n */\nexport function setFeatureFlag(flagName, flagValue) {\n    if (!FEATURE_FLAG_NAMES[flagName])\n        throw new Error(`Can't set non existing feature flag ${flagName}! Supported flags: ${Object.keys(FEATURE_FLAG_NAMES)}`);\n    featureFlagsMap[flagName] = !!flagValue;\n}\n\n/**\n *\n * @param {FEATURE_FLAG_NAMES} flagName\n * @return {boolean}\n */\nexport function getFeatureFlag(flagName) {\n    if (!FEATURE_FLAG_NAMES[flagName])\n        throw new Error(`Can't get non existing feature flag ${flagName}! Supported flags: ${Object.keys(FEATURE_FLAG_NAMES)}`);\n    return featureFlagsMap[flagName];\n}\n","import {SHADOW_ELEMENT_ATTRIBUTE_NAME, DRAGGED_ELEMENT_ID} from \"../constants\";\nimport {findCenter} from \"./intersection\";\nimport {svelteNodeClone} from \"./svelteNodeClone\";\nimport {getFeatureFlag, FEATURE_FLAG_NAMES} from \"../featureFlags\";\n\nconst TRANSITION_DURATION_SECONDS = 0.2;\n\n/**\n * private helper function - creates a transition string for a property\n * @param {string} property\n * @return {string} - the transition string\n */\nfunction trs(property) {\n    return `${property} ${TRANSITION_DURATION_SECONDS}s ease`;\n}\n/**\n * clones the given element and applies proper styles and transitions to the dragged element\n * @param {HTMLElement} originalElement\n * @param {Point} [positionCenterOnXY]\n * @return {Node} - the cloned, styled element\n */\nexport function createDraggedElementFrom(originalElement, positionCenterOnXY) {\n    const rect = originalElement.getBoundingClientRect();\n    const draggedEl = svelteNodeClone(originalElement);\n    copyStylesFromTo(originalElement, draggedEl);\n    draggedEl.id = DRAGGED_ELEMENT_ID;\n    draggedEl.style.position = \"fixed\";\n    let elTopPx = rect.top;\n    let elLeftPx = rect.left;\n    draggedEl.style.top = `${elTopPx}px`;\n    draggedEl.style.left = `${elLeftPx}px`;\n    if (positionCenterOnXY) {\n        const center = findCenter(rect);\n        elTopPx -= center.y - positionCenterOnXY.y;\n        elLeftPx -= center.x - positionCenterOnXY.x;\n        window.setTimeout(() => {\n            draggedEl.style.top = `${elTopPx}px`;\n            draggedEl.style.left = `${elLeftPx}px`;\n        }, 0);\n    }\n    draggedEl.style.margin = \"0\";\n    // we can't have relative or automatic height and width or it will break the illusion\n    draggedEl.style.boxSizing = \"border-box\";\n    draggedEl.style.height = `${rect.height}px`;\n    draggedEl.style.width = `${rect.width}px`;\n    draggedEl.style.transition = `${trs(\"top\")}, ${trs(\"left\")}, ${trs(\"background-color\")}, ${trs(\"opacity\")}, ${trs(\"color\")} `;\n    // this is a workaround for a strange browser bug that causes the right border to disappear when all the transitions are added at the same time\n    window.setTimeout(() => (draggedEl.style.transition += `, ${trs(\"width\")}, ${trs(\"height\")}`), 0);\n    draggedEl.style.zIndex = \"9999\";\n    draggedEl.style.cursor = \"grabbing\";\n\n    return draggedEl;\n}\n\n/**\n * styles the dragged element to a 'dropped' state\n * @param {HTMLElement} draggedEl\n */\nexport function moveDraggedElementToWasDroppedState(draggedEl) {\n    draggedEl.style.cursor = \"grab\";\n}\n\n/**\n * Morphs the dragged element style, maintains the mouse pointer within the element\n * @param {HTMLElement} draggedEl\n * @param {HTMLElement} copyFromEl - the element the dragged element should look like, typically the shadow element\n * @param {number} currentMouseX\n * @param {number} currentMouseY\n */\nexport function morphDraggedElementToBeLike(draggedEl, copyFromEl, currentMouseX, currentMouseY) {\n    copyStylesFromTo(copyFromEl, draggedEl);\n    const newRect = copyFromEl.getBoundingClientRect();\n    const draggedElRect = draggedEl.getBoundingClientRect();\n    const widthChange = newRect.width - draggedElRect.width;\n    const heightChange = newRect.height - draggedElRect.height;\n    if (widthChange || heightChange) {\n        const relativeDistanceOfMousePointerFromDraggedSides = {\n            left: (currentMouseX - draggedElRect.left) / draggedElRect.width,\n            top: (currentMouseY - draggedElRect.top) / draggedElRect.height\n        };\n        if (!getFeatureFlag(FEATURE_FLAG_NAMES.USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT)) {\n            draggedEl.style.height = `${newRect.height}px`;\n            draggedEl.style.width = `${newRect.width}px`;\n        }\n        draggedEl.style.left = `${parseFloat(draggedEl.style.left) - relativeDistanceOfMousePointerFromDraggedSides.left * widthChange}px`;\n        draggedEl.style.top = `${parseFloat(draggedEl.style.top) - relativeDistanceOfMousePointerFromDraggedSides.top * heightChange}px`;\n    }\n}\n\n/**\n * @param {HTMLElement} copyFromEl\n * @param {HTMLElement} copyToEl\n */\nfunction copyStylesFromTo(copyFromEl, copyToEl) {\n    const computedStyle = window.getComputedStyle(copyFromEl);\n    Array.from(computedStyle)\n        .filter(\n            s =>\n                s.startsWith(\"background\") ||\n                s.startsWith(\"padding\") ||\n                s.startsWith(\"font\") ||\n                s.startsWith(\"text\") ||\n                s.startsWith(\"align\") ||\n                s.startsWith(\"justify\") ||\n                s.startsWith(\"display\") ||\n                s.startsWith(\"flex\") ||\n                s.startsWith(\"border\") ||\n                s === \"opacity\" ||\n                s === \"color\" ||\n                s === \"list-style-type\" ||\n                // copying with and height to make up for rect update timing issues in some browsers\n                (getFeatureFlag(FEATURE_FLAG_NAMES.USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT) && (s === \"width\" || s === \"height\"))\n        )\n        .forEach(s => copyToEl.style.setProperty(s, computedStyle.getPropertyValue(s), computedStyle.getPropertyPriority(s)));\n}\n\n/**\n * makes the element compatible with being draggable\n * @param {HTMLElement} draggableEl\n * @param {boolean} dragDisabled\n */\nexport function styleDraggable(draggableEl, dragDisabled) {\n    draggableEl.draggable = false;\n    draggableEl.ondragstart = () => false;\n    if (!dragDisabled) {\n        draggableEl.style.userSelect = \"none\";\n        draggableEl.style.WebkitUserSelect = \"none\";\n        draggableEl.style.cursor = \"grab\";\n    } else {\n        draggableEl.style.userSelect = \"\";\n        draggableEl.style.WebkitUserSelect = \"\";\n        draggableEl.style.cursor = \"\";\n    }\n}\n\n/**\n * Hides the provided element so that it can stay in the dom without interrupting\n * @param {HTMLElement} dragTarget\n */\nexport function hideElement(dragTarget) {\n    dragTarget.style.display = \"none\";\n    dragTarget.style.position = \"fixed\";\n    dragTarget.style.zIndex = \"-5\";\n}\n\n/**\n * styles the shadow element\n * @param {HTMLElement} shadowEl\n */\nexport function decorateShadowEl(shadowEl) {\n    shadowEl.style.visibility = \"hidden\";\n    shadowEl.setAttribute(SHADOW_ELEMENT_ATTRIBUTE_NAME, \"true\");\n}\n\n/**\n * undo the styles the shadow element\n * @param {HTMLElement} shadowEl\n */\nexport function unDecorateShadowElement(shadowEl) {\n    shadowEl.style.visibility = \"\";\n    shadowEl.removeAttribute(SHADOW_ELEMENT_ATTRIBUTE_NAME);\n}\n\n/**\n * will mark the given dropzones as visually active\n * @param {Array<HTMLElement>} dropZones\n * @param {Function} getStyles - maps a dropzone to a styles object (so the styles can be removed)\n * @param {Function} getClasses - maps a dropzone to a classList\n */\nexport function styleActiveDropZones(dropZones, getStyles = () => {}, getClasses = () => []) {\n    dropZones.forEach(dz => {\n        const styles = getStyles(dz);\n        Object.keys(styles).forEach(style => {\n            dz.style[style] = styles[style];\n        });\n        getClasses(dz).forEach(c => dz.classList.add(c));\n    });\n}\n\n/**\n * will remove the 'active' styling from given dropzones\n * @param {Array<HTMLElement>} dropZones\n * @param {Function} getStyles - maps a dropzone to a styles object\n * @param {Function} getClasses - maps a dropzone to a classList\n */\nexport function styleInactiveDropZones(dropZones, getStyles = () => {}, getClasses = () => []) {\n    dropZones.forEach(dz => {\n        const styles = getStyles(dz);\n        Object.keys(styles).forEach(style => {\n            dz.style[style] = \"\";\n        });\n        getClasses(dz).forEach(c => dz.classList.contains(c) && dz.classList.remove(c));\n    });\n}\n\n/**\n * will prevent the provided element from shrinking by setting its minWidth and minHeight to the current width and height values\n * @param {HTMLElement} el\n * @return {function(): void} - run this function to undo the operation and restore the original values\n */\nexport function preventShrinking(el) {\n    const originalMinHeight = el.style.minHeight;\n    el.style.minHeight = window.getComputedStyle(el).getPropertyValue(\"height\");\n    const originalMinWidth = el.style.minWidth;\n    el.style.minWidth = window.getComputedStyle(el).getPropertyValue(\"width\");\n    return function undo() {\n        el.style.minHeight = originalMinHeight;\n        el.style.minWidth = originalMinWidth;\n    };\n}\n","import {\n    decrementActiveDropZoneCount,\n    incrementActiveDropZoneCount,\n    ITEM_ID_KEY,\n    printDebug,\n    SHADOW_ITEM_MARKER_PROPERTY_NAME,\n    SHADOW_PLACEHOLDER_ITEM_ID,\n    SOURCES,\n    TRIGGERS\n} from \"./constants\";\nimport {observe, unobserve} from \"./helpers/observer\";\nimport {armWindowScroller, disarmWindowScroller} from \"./helpers/windowScroller\";\nimport {\n    createDraggedElementFrom,\n    decorateShadowEl,\n    hideElement,\n    morphDraggedElementToBeLike,\n    moveDraggedElementToWasDroppedState,\n    preventShrinking,\n    styleActiveDropZones,\n    styleDraggable,\n    styleInactiveDropZones,\n    unDecorateShadowElement\n} from \"./helpers/styler\";\nimport {\n    dispatchConsiderEvent,\n    dispatchFinalizeEvent,\n    DRAGGED_ENTERED_EVENT_NAME,\n    DRAGGED_LEFT_DOCUMENT_EVENT_NAME,\n    DRAGGED_LEFT_EVENT_NAME,\n    DRAGGED_LEFT_TYPES,\n    DRAGGED_OVER_INDEX_EVENT_NAME\n} from \"./helpers/dispatcher\";\nimport {areArraysShallowEqualSameOrder, areObjectsShallowEqual, toString} from \"./helpers/util\";\nimport {getBoundingRectNoTransforms} from \"./helpers/intersection\";\n\nconst DEFAULT_DROP_ZONE_TYPE = \"--any--\";\nconst MIN_OBSERVATION_INTERVAL_MS = 100;\nconst DISABLED_OBSERVATION_INTERVAL_MS = 20;\nconst MIN_MOVEMENT_BEFORE_DRAG_START_PX = 3;\nconst DEFAULT_DROP_TARGET_STYLE = {\n    outline: \"rgba(255, 255, 102, 0.7) solid 2px\"\n};\nconst ORIGINAL_DRAGGED_ITEM_MARKER_ATTRIBUTE = \"data-is-dnd-original-dragged-item\";\n\nlet originalDragTarget;\nlet draggedEl;\nlet draggedElData;\nlet draggedElType;\nlet originDropZone;\nlet originIndex;\nlet shadowElData;\nlet shadowElDropZone;\nlet dragStartMousePosition;\nlet currentMousePosition;\nlet isWorkingOnPreviousDrag = false;\nlet finalizingPreviousDrag = false;\nlet unlockOriginDzMinDimensions;\nlet isDraggedOutsideOfAnyDz = false;\nlet scheduledForRemovalAfterDrop = [];\n\n// a map from type to a set of drop-zones\nconst typeToDropZones = new Map();\n// important - this is needed because otherwise the config that would be used for everyone is the config of the element that created the event listeners\nconst dzToConfig = new Map();\n// this is needed in order to be able to cleanup old listeners and avoid stale closures issues (as the listener is defined within each zone)\nconst elToMouseDownListener = new WeakMap();\n\n/* drop-zones registration management */\nfunction registerDropZone(dropZoneEl, type) {\n    printDebug(() => \"registering drop-zone if absent\");\n    if (!typeToDropZones.has(type)) {\n        typeToDropZones.set(type, new Set());\n    }\n    if (!typeToDropZones.get(type).has(dropZoneEl)) {\n        typeToDropZones.get(type).add(dropZoneEl);\n        incrementActiveDropZoneCount();\n    }\n}\nfunction unregisterDropZone(dropZoneEl, type) {\n    typeToDropZones.get(type).delete(dropZoneEl);\n    decrementActiveDropZoneCount();\n    if (typeToDropZones.get(type).size === 0) {\n        typeToDropZones.delete(type);\n    }\n}\n\n/* functions to manage observing the dragged element and trigger custom drag-events */\nfunction watchDraggedElement() {\n    printDebug(() => \"watching dragged element\");\n    armWindowScroller();\n    const dropZones = typeToDropZones.get(draggedElType);\n    for (const dz of dropZones) {\n        dz.addEventListener(DRAGGED_ENTERED_EVENT_NAME, handleDraggedEntered);\n        dz.addEventListener(DRAGGED_LEFT_EVENT_NAME, handleDraggedLeft);\n        dz.addEventListener(DRAGGED_OVER_INDEX_EVENT_NAME, handleDraggedIsOverIndex);\n    }\n    window.addEventListener(DRAGGED_LEFT_DOCUMENT_EVENT_NAME, handleDrop);\n    // it is important that we don't have an interval that is faster than the flip duration because it can cause elements to jump bach and forth\n    const setIntervalMs = Math.max(...Array.from(dropZones.keys()).map(dz => dzToConfig.get(dz).dropAnimationDurationMs));\n    const observationIntervalMs = setIntervalMs === 0 ? DISABLED_OBSERVATION_INTERVAL_MS : Math.max(setIntervalMs, MIN_OBSERVATION_INTERVAL_MS); //if setintervalms is 0 it goes to 20, otherwise it is max between it and min observation.\n    observe(draggedEl, dropZones, observationIntervalMs * 1.07);\n}\nfunction unWatchDraggedElement() {\n    printDebug(() => \"unwatching dragged element\");\n    disarmWindowScroller();\n    const dropZones = typeToDropZones.get(draggedElType);\n    for (const dz of dropZones) {\n        dz.removeEventListener(DRAGGED_ENTERED_EVENT_NAME, handleDraggedEntered);\n        dz.removeEventListener(DRAGGED_LEFT_EVENT_NAME, handleDraggedLeft);\n        dz.removeEventListener(DRAGGED_OVER_INDEX_EVENT_NAME, handleDraggedIsOverIndex);\n    }\n    window.removeEventListener(DRAGGED_LEFT_DOCUMENT_EVENT_NAME, handleDrop);\n    unobserve();\n}\n\nfunction findShadowElementIdx(items) {\n    return items.findIndex(item => !!item[SHADOW_ITEM_MARKER_PROPERTY_NAME]);\n}\n\n/* custom drag-events handlers */\nfunction handleDraggedEntered(e) {\n    printDebug(() => [\"dragged entered\", e.currentTarget, e.detail]);\n    let {items, dropFromOthersDisabled} = dzToConfig.get(e.currentTarget);\n    if (dropFromOthersDisabled && e.currentTarget !== originDropZone) {\n        printDebug(() => \"ignoring dragged entered because drop is currently disabled\");\n        return;\n    }\n    isDraggedOutsideOfAnyDz = false;\n    // this deals with another race condition. in rare occasions (super rapid operations) the list hasn't updated yet\n    items = items.filter(item => item[ITEM_ID_KEY] !== shadowElData[ITEM_ID_KEY]);\n    printDebug(() => `dragged entered items ${toString(items)}`);\n\n    if (originDropZone !== e.currentTarget) {\n        const originZoneItems = dzToConfig.get(originDropZone).items;\n        const newOriginZoneItems = originZoneItems.filter(item => !item[SHADOW_ITEM_MARKER_PROPERTY_NAME]);\n        dispatchConsiderEvent(originDropZone, newOriginZoneItems, {\n            trigger: TRIGGERS.DRAGGED_ENTERED_ANOTHER,\n            id: draggedElData[ITEM_ID_KEY],\n            source: SOURCES.POINTER\n        });\n    }\n    const {index, isProximityBased} = e.detail.indexObj;\n    const shadowElIdx = isProximityBased && index === e.currentTarget.children.length - 1 ? index + 1 : index;\n    shadowElDropZone = e.currentTarget;\n    items.splice(shadowElIdx, 0, shadowElData);\n    dispatchConsiderEvent(e.currentTarget, items, {trigger: TRIGGERS.DRAGGED_ENTERED, id: draggedElData[ITEM_ID_KEY], source: SOURCES.POINTER});\n}\n\nfunction handleDraggedLeft(e) {\n    // dealing with a rare race condition on extremely rapid clicking and dropping\n    if (!isWorkingOnPreviousDrag) return;\n    printDebug(() => [\"dragged left\", e.currentTarget, e.detail]);\n    const {items, dropFromOthersDisabled} = dzToConfig.get(e.currentTarget);\n    if (dropFromOthersDisabled && e.currentTarget !== originDropZone && e.currentTarget !== shadowElDropZone) {\n        printDebug(() => \"drop is currently disabled\");\n        return;\n    }\n    const shadowElIdx = findShadowElementIdx(items);\n    const shadowItem = items.splice(shadowElIdx, 1)[0];\n    shadowElDropZone = undefined;\n    const {type, theOtherDz} = e.detail;\n    if (\n        type === DRAGGED_LEFT_TYPES.OUTSIDE_OF_ANY ||\n        (type === DRAGGED_LEFT_TYPES.LEFT_FOR_ANOTHER && theOtherDz !== originDropZone && dzToConfig.get(theOtherDz).dropFromOthersDisabled)\n    ) {\n        printDebug(() => \"dragged left all, putting shadow element back in the origin dz\");\n        isDraggedOutsideOfAnyDz = true;\n        shadowElDropZone = originDropZone;\n        const originZoneItems = dzToConfig.get(originDropZone).items;\n        originZoneItems.splice(originIndex, 0, shadowItem);\n        dispatchConsiderEvent(originDropZone, originZoneItems, {\n            trigger: TRIGGERS.DRAGGED_LEFT_ALL,\n            id: draggedElData[ITEM_ID_KEY],\n            source: SOURCES.POINTER\n        });\n    }\n    // for the origin dz, when the dragged is outside of any, this will be fired in addition to the previous. this is for simplicity\n    dispatchConsiderEvent(e.currentTarget, items, {\n        trigger: TRIGGERS.DRAGGED_LEFT,\n        id: draggedElData[ITEM_ID_KEY],\n        source: SOURCES.POINTER\n    });\n}\nfunction handleDraggedIsOverIndex(e) {\n    printDebug(() => [\"dragged is over index\", e.currentTarget, e.detail]);\n    const {items, dropFromOthersDisabled} = dzToConfig.get(e.currentTarget);\n    if (dropFromOthersDisabled && e.currentTarget !== originDropZone) {\n        printDebug(() => \"drop is currently disabled\");\n        return;\n    }\n    isDraggedOutsideOfAnyDz = false;\n    const {index} = e.detail.indexObj;\n    const shadowElIdx = findShadowElementIdx(items);\n    items.splice(shadowElIdx, 1);\n    items.splice(index, 0, shadowElData);\n    dispatchConsiderEvent(e.currentTarget, items, {trigger: TRIGGERS.DRAGGED_OVER_INDEX, id: draggedElData[ITEM_ID_KEY], source: SOURCES.POINTER});\n}\n\n// Global mouse/touch-events handlers\nfunction handleMouseMove(e) {\n    e.preventDefault();\n    const c = e.touches ? e.touches[0] : e;\n    currentMousePosition = {x: c.clientX, y: c.clientY};\n    draggedEl.style.transform = `translate3d(${currentMousePosition.x - dragStartMousePosition.x}px, ${\n        currentMousePosition.y - dragStartMousePosition.y\n    }px, 0)`;\n}\n\nfunction handleDrop() {\n    printDebug(() => \"dropped\");\n    finalizingPreviousDrag = true;\n    // cleanup\n    window.removeEventListener(\"mousemove\", handleMouseMove);\n    window.removeEventListener(\"touchmove\", handleMouseMove);\n    window.removeEventListener(\"mouseup\", handleDrop);\n    window.removeEventListener(\"touchend\", handleDrop);\n    unWatchDraggedElement();\n    moveDraggedElementToWasDroppedState(draggedEl);\n\n    if (!shadowElDropZone) {\n        printDebug(() => \"element was dropped right after it left origin but before entering somewhere else\");\n        shadowElDropZone = originDropZone;\n    }\n    printDebug(() => [\"dropped in dz\", shadowElDropZone]);\n    let {items, type} = dzToConfig.get(shadowElDropZone);\n    styleInactiveDropZones(\n        typeToDropZones.get(type),\n        dz => dzToConfig.get(dz).dropTargetStyle,\n        dz => dzToConfig.get(dz).dropTargetClasses\n    );\n    let shadowElIdx = findShadowElementIdx(items);\n    // the handler might remove the shadow element, ex: dragula like copy on drag\n    if (shadowElIdx === -1) shadowElIdx = originIndex;\n\n    items = items.map(item => (item[SHADOW_ITEM_MARKER_PROPERTY_NAME] ? draggedElData : item));\n    function finalizeWithinZone() {\n        unlockOriginDzMinDimensions();\n        dispatchFinalizeEvent(shadowElDropZone, items, {\n            trigger: isDraggedOutsideOfAnyDz ? TRIGGERS.DROPPED_OUTSIDE_OF_ANY : TRIGGERS.DROPPED_INTO_ZONE,\n            id: draggedElData[ITEM_ID_KEY],\n            source: SOURCES.POINTER\n        });\n        if (shadowElDropZone !== originDropZone) {\n            // letting the origin drop zone know the element was permanently taken away\n            dispatchFinalizeEvent(originDropZone, dzToConfig.get(originDropZone).items, {\n                trigger: TRIGGERS.DROPPED_INTO_ANOTHER,\n                id: draggedElData[ITEM_ID_KEY],\n                source: SOURCES.POINTER\n            });\n        }\n        unDecorateShadowElement(shadowElDropZone.children[shadowElIdx]);\n        cleanupPostDrop();\n    }\n    animateDraggedToFinalPosition(shadowElIdx, finalizeWithinZone);\n}\n\n// helper function for handleDrop\nfunction animateDraggedToFinalPosition(shadowElIdx, callback) {\n    const shadowElRect = getBoundingRectNoTransforms(shadowElDropZone.children[shadowElIdx]);\n    const newTransform = {\n        x: shadowElRect.left - parseFloat(draggedEl.style.left),\n        y: shadowElRect.top - parseFloat(draggedEl.style.top)\n    };\n    const {dropAnimationDurationMs} = dzToConfig.get(shadowElDropZone);\n    const transition = `transform ${dropAnimationDurationMs}ms ease`;\n    draggedEl.style.transition = draggedEl.style.transition ? draggedEl.style.transition + \",\" + transition : transition;\n    draggedEl.style.transform = `translate3d(${newTransform.x}px, ${newTransform.y}px, 0)`;\n    window.setTimeout(callback, dropAnimationDurationMs);\n}\n\nfunction scheduleDZForRemovalAfterDrop(dz, destroy) {\n    scheduledForRemovalAfterDrop.push({dz, destroy});\n    window.requestAnimationFrame(() => {\n        hideElement(dz);\n        document.body.appendChild(dz);\n    });\n}\n/* cleanup */\nfunction cleanupPostDrop() {\n    draggedEl.remove();\n    originalDragTarget.remove();\n    if (scheduledForRemovalAfterDrop.length) {\n        printDebug(() => [\"will destroy zones that were removed during drag\", scheduledForRemovalAfterDrop]);\n        scheduledForRemovalAfterDrop.forEach(({dz, destroy}) => {\n            destroy();\n            dz.remove();\n        });\n        scheduledForRemovalAfterDrop = [];\n    }\n    draggedEl = undefined;\n    originalDragTarget = undefined;\n    draggedElData = undefined;\n    draggedElType = undefined;\n    originDropZone = undefined;\n    originIndex = undefined;\n    shadowElData = undefined;\n    shadowElDropZone = undefined;\n    dragStartMousePosition = undefined;\n    currentMousePosition = undefined;\n    isWorkingOnPreviousDrag = false;\n    finalizingPreviousDrag = false;\n    unlockOriginDzMinDimensions = undefined;\n    isDraggedOutsideOfAnyDz = false;\n}\n\nexport function dndzone(node, options) {\n    let initialized = false;\n    const config = {\n        items: undefined,\n        type: undefined,\n        flipDurationMs: 0,\n        dragDisabled: false,\n        morphDisabled: false,\n        dropFromOthersDisabled: false,\n        dropTargetStyle: DEFAULT_DROP_TARGET_STYLE,\n        dropTargetClasses: [],\n        transformDraggedElement: () => {},\n        centreDraggedOnCursor: false\n    };\n    printDebug(() => [`dndzone good to go options: ${toString(options)}, config: ${toString(config)}`, {node}]);\n    let elToIdx = new Map();\n\n    function addMaybeListeners() {\n        window.addEventListener(\"mousemove\", handleMouseMoveMaybeDragStart, {passive: false});\n        window.addEventListener(\"touchmove\", handleMouseMoveMaybeDragStart, {passive: false, capture: false});\n        window.addEventListener(\"mouseup\", handleFalseAlarm, {passive: false});\n        window.addEventListener(\"touchend\", handleFalseAlarm, {passive: false});\n    }\n    function removeMaybeListeners() {\n        window.removeEventListener(\"mousemove\", handleMouseMoveMaybeDragStart);\n        window.removeEventListener(\"touchmove\", handleMouseMoveMaybeDragStart);\n        window.removeEventListener(\"mouseup\", handleFalseAlarm);\n        window.removeEventListener(\"touchend\", handleFalseAlarm);\n    }\n    function handleFalseAlarm() {\n        removeMaybeListeners();\n        originalDragTarget = undefined;\n        dragStartMousePosition = undefined;\n        currentMousePosition = undefined;\n    }\n\n    function handleMouseMoveMaybeDragStart(e) {\n        e.preventDefault();\n        const c = e.touches ? e.touches[0] : e;\n        currentMousePosition = {x: c.clientX, y: c.clientY};\n        if (\n            Math.abs(currentMousePosition.x - dragStartMousePosition.x) >= MIN_MOVEMENT_BEFORE_DRAG_START_PX ||\n            Math.abs(currentMousePosition.y - dragStartMousePosition.y) >= MIN_MOVEMENT_BEFORE_DRAG_START_PX\n        ) {\n            removeMaybeListeners();\n            handleDragStart();\n        }\n    }\n    function handleMouseDown(e) {\n        // on safari clicking on a select element doesn't fire mouseup at the end of the click and in general this makes more sense\n        if (e.target !== e.currentTarget && (e.target.value !== undefined || e.target.isContentEditable)) {\n            printDebug(() => \"won't initiate drag on a nested input element\");\n            return;\n        }\n        // prevents responding to any button but left click which equals 0 (which is falsy)\n        if (e.button) {\n            printDebug(() => `ignoring none left click button: ${e.button}`);\n            return;\n        }\n        if (isWorkingOnPreviousDrag) {\n            printDebug(() => \"cannot start a new drag before finalizing previous one\");\n            return;\n        }\n        e.stopPropagation();\n        const c = e.touches ? e.touches[0] : e;\n        dragStartMousePosition = {x: c.clientX, y: c.clientY};\n        currentMousePosition = {...dragStartMousePosition};\n        originalDragTarget = e.currentTarget;\n        addMaybeListeners();\n    }\n\n    function handleDragStart() {\n        printDebug(() => [`drag start config: ${toString(config)}`, originalDragTarget]);\n        isWorkingOnPreviousDrag = true;\n\n        // initialising globals\n        const currentIdx = elToIdx.get(originalDragTarget);\n        originIndex = currentIdx;\n        originDropZone = originalDragTarget.parentElement;\n        /** @type {ShadowRoot | HTMLDocument} */\n        const rootNode = originDropZone.getRootNode();\n        const originDropZoneRoot = rootNode.body || rootNode;\n        const {items, type, centreDraggedOnCursor} = config;\n        draggedElData = {...items[currentIdx]};\n        draggedElType = type;\n        shadowElData = {...draggedElData, [SHADOW_ITEM_MARKER_PROPERTY_NAME]: true, [ITEM_ID_KEY]: SHADOW_PLACEHOLDER_ITEM_ID};\n\n        // creating the draggable element\n        draggedEl = createDraggedElementFrom(originalDragTarget, centreDraggedOnCursor && currentMousePosition);\n        originalDragTarget.setAttribute(ORIGINAL_DRAGGED_ITEM_MARKER_ATTRIBUTE, true);\n\n        // We will keep the original dom node in the dom because touch events keep firing on it, we want to re-add it after the framework removes it\n        function keepOriginalElementInDom() {\n            if (!draggedEl.parentElement) {\n                originDropZoneRoot.appendChild(draggedEl);\n                // to prevent the outline from disappearing\n                draggedEl.focus();\n                watchDraggedElement();\n                hideElement(originalDragTarget);\n                originDropZoneRoot.appendChild(originalDragTarget);\n            } else {\n                window.requestAnimationFrame(keepOriginalElementInDom);\n            }\n        }\n        window.requestAnimationFrame(keepOriginalElementInDom);\n\n        styleActiveDropZones(\n            Array.from(typeToDropZones.get(config.type)).filter(dz => dz === originDropZone || !dzToConfig.get(dz).dropFromOthersDisabled),\n            dz => dzToConfig.get(dz).dropTargetStyle,\n            dz => dzToConfig.get(dz).dropTargetClasses\n        );\n\n        // removing the original element by removing its data entry\n        items.splice(currentIdx, 1, shadowElData);\n        unlockOriginDzMinDimensions = preventShrinking(originDropZone);\n\n        dispatchConsiderEvent(originDropZone, items, {trigger: TRIGGERS.DRAG_STARTED, id: draggedElData[ITEM_ID_KEY], source: SOURCES.POINTER});\n\n        // handing over to global handlers - starting to watch the element\n        window.addEventListener(\"mousemove\", handleMouseMove, {passive: false});\n        window.addEventListener(\"touchmove\", handleMouseMove, {passive: false, capture: false});\n        window.addEventListener(\"mouseup\", handleDrop, {passive: false});\n        window.addEventListener(\"touchend\", handleDrop, {passive: false});\n    }\n\n    function configure({\n        items = undefined,\n        flipDurationMs: dropAnimationDurationMs = 0,\n        type: newType = DEFAULT_DROP_ZONE_TYPE,\n        dragDisabled = false,\n        morphDisabled = false,\n        dropFromOthersDisabled = false,\n        dropTargetStyle = DEFAULT_DROP_TARGET_STYLE,\n        dropTargetClasses = [],\n        transformDraggedElement = () => {},\n        centreDraggedOnCursor = false\n    }) {\n        config.dropAnimationDurationMs = dropAnimationDurationMs;\n        if (config.type && newType !== config.type) {\n            unregisterDropZone(node, config.type);\n        }\n        config.type = newType;\n        config.items = [...items];\n        config.dragDisabled = dragDisabled;\n        config.morphDisabled = morphDisabled;\n        config.transformDraggedElement = transformDraggedElement;\n        config.centreDraggedOnCursor = centreDraggedOnCursor;\n\n        // realtime update for dropTargetStyle\n        if (\n            initialized &&\n            isWorkingOnPreviousDrag &&\n            !finalizingPreviousDrag &&\n            (!areObjectsShallowEqual(dropTargetStyle, config.dropTargetStyle) ||\n                !areArraysShallowEqualSameOrder(dropTargetClasses, config.dropTargetClasses))\n        ) {\n            styleInactiveDropZones(\n                [node],\n                () => config.dropTargetStyle,\n                () => dropTargetClasses\n            );\n            styleActiveDropZones(\n                [node],\n                () => dropTargetStyle,\n                () => dropTargetClasses\n            );\n        }\n        config.dropTargetStyle = dropTargetStyle;\n        config.dropTargetClasses = [...dropTargetClasses];\n\n        // realtime update for dropFromOthersDisabled\n        function getConfigProp(dz, propName) {\n            return dzToConfig.get(dz) ? dzToConfig.get(dz)[propName] : config[propName];\n        }\n        if (initialized && isWorkingOnPreviousDrag && config.dropFromOthersDisabled !== dropFromOthersDisabled) {\n            if (dropFromOthersDisabled) {\n                styleInactiveDropZones(\n                    [node],\n                    dz => getConfigProp(dz, \"dropTargetStyle\"),\n                    dz => getConfigProp(dz, \"dropTargetClasses\")\n                );\n            } else {\n                styleActiveDropZones(\n                    [node],\n                    dz => getConfigProp(dz, \"dropTargetStyle\"),\n                    dz => getConfigProp(dz, \"dropTargetClasses\")\n                );\n            }\n        }\n        config.dropFromOthersDisabled = dropFromOthersDisabled;\n\n        dzToConfig.set(node, config);\n        registerDropZone(node, newType);\n        const shadowElIdx = findShadowElementIdx(config.items);\n        for (let idx = 0; idx < node.children.length; idx++) {\n            const draggableEl = node.children[idx];\n            styleDraggable(draggableEl, dragDisabled);\n            if (idx === shadowElIdx) {\n                config.transformDraggedElement(draggedEl, draggedElData, idx);\n                if (!morphDisabled) {\n                    morphDraggedElementToBeLike(draggedEl, draggableEl, currentMousePosition.x, currentMousePosition.y);\n                }\n                decorateShadowEl(draggableEl);\n                continue;\n            }\n            draggableEl.removeEventListener(\"mousedown\", elToMouseDownListener.get(draggableEl));\n            draggableEl.removeEventListener(\"touchstart\", elToMouseDownListener.get(draggableEl));\n            if (!dragDisabled) {\n                draggableEl.addEventListener(\"mousedown\", handleMouseDown);\n                draggableEl.addEventListener(\"touchstart\", handleMouseDown);\n                elToMouseDownListener.set(draggableEl, handleMouseDown);\n            }\n            // updating the idx\n            elToIdx.set(draggableEl, idx);\n\n            if (!initialized) {\n                initialized = true;\n            }\n        }\n    }\n    configure(options);\n\n    return {\n        update: newOptions => {\n            printDebug(() => `pointer dndzone will update newOptions: ${toString(newOptions)}`);\n            configure(newOptions);\n        },\n        destroy: () => {\n            function destroyDz() {\n                printDebug(() => \"pointer dndzone will destroy\");\n                unregisterDropZone(node, dzToConfig.get(node).type);\n                dzToConfig.delete(node);\n            }\n            if (isWorkingOnPreviousDrag && !node.closest(`[${ORIGINAL_DRAGGED_ITEM_MARKER_ATTRIBUTE}]`)) {\n                printDebug(() => \"pointer dndzone will be scheduled for destruction\");\n                scheduleDZForRemovalAfterDrop(node, destroyDz);\n            } else {\n                destroyDz();\n            }\n        }\n    };\n}\n","/**\n * Fixes svelte issue when cloning node containing (or being) <select> which will loose it's value.\n * Since svelte manages select value internally.\n * @see https://github.com/sveltejs/svelte/issues/6717\n * @see https://github.com/isaacHagoel/svelte-dnd-action/issues/306\n *\n * @param {HTMLElement} el\n * @returns\n */\nexport function svelteNodeClone(el) {\n    const cloned = el.cloneNode(true);\n\n    const values = [];\n    const elIsSelect = el.tagName === \"SELECT\";\n    const selects = elIsSelect ? [el] : [...el.querySelectorAll(\"select\")];\n    for (const select of selects) {\n        values.push(select.value);\n    }\n\n    if (selects.length <= 0) {\n        return cloned;\n    }\n\n    const clonedSelects = elIsSelect ? [cloned] : [...cloned.querySelectorAll(\"select\")];\n    for (let i = 0; i < clonedSelects.length; i++) {\n        const select = clonedSelects[i];\n        const value = values[i];\n        const optionEl = select.querySelector(`option[value=\"${value}\"`);\n        if (optionEl) {\n            optionEl.setAttribute(\"selected\", true);\n        }\n    }\n\n    return cloned;\n}\n","import {isOnServer} from \"../constants\";\n\nconst INSTRUCTION_IDs = {\n    DND_ZONE_ACTIVE: \"dnd-zone-active\",\n    DND_ZONE_DRAG_DISABLED: \"dnd-zone-drag-disabled\"\n};\nconst ID_TO_INSTRUCTION = {\n    [INSTRUCTION_IDs.DND_ZONE_ACTIVE]: \"Tab to one the items and press space-bar or enter to start dragging it\",\n    [INSTRUCTION_IDs.DND_ZONE_DRAG_DISABLED]: \"This is a disabled drag and drop list\"\n};\n\nconst ALERT_DIV_ID = \"dnd-action-aria-alert\";\nlet alertsDiv;\n\nfunction initAriaOnBrowser() {\n    if (alertsDiv) {\n        // it is already initialized\n        return;\n    }\n    // setting the dynamic alerts\n    alertsDiv = document.createElement(\"div\");\n    (function initAlertsDiv() {\n        alertsDiv.id = ALERT_DIV_ID;\n        // tab index -1 makes the alert be read twice on chrome for some reason\n        //alertsDiv.tabIndex = -1;\n        alertsDiv.style.position = \"fixed\";\n        alertsDiv.style.bottom = \"0\";\n        alertsDiv.style.left = \"0\";\n        alertsDiv.style.zIndex = \"-5\";\n        alertsDiv.style.opacity = \"0\";\n        alertsDiv.style.height = \"0\";\n        alertsDiv.style.width = \"0\";\n        alertsDiv.setAttribute(\"role\", \"alert\");\n    })();\n    document.body.prepend(alertsDiv);\n\n    // setting the instructions\n    Object.entries(ID_TO_INSTRUCTION).forEach(([id, txt]) => document.body.prepend(instructionToHiddenDiv(id, txt)));\n}\n\n/**\n * Initializes the static aria instructions so they can be attached to zones\n * @return {{DND_ZONE_ACTIVE: string, DND_ZONE_DRAG_DISABLED: string} | null} - the IDs for static aria instruction (to be used via aria-describedby) or null on the server\n */\nexport function initAria() {\n    if (isOnServer) return null;\n    if (document.readyState === \"complete\") {\n        initAriaOnBrowser();\n    } else {\n        window.addEventListener(\"DOMContentLoaded\", initAriaOnBrowser);\n    }\n    return {...INSTRUCTION_IDs};\n}\n\n/**\n * Removes all the artifacts (dom elements) added by this module\n */\nexport function destroyAria() {\n    if (isOnServer || !alertsDiv) return;\n    Object.keys(ID_TO_INSTRUCTION).forEach(id => document.getElementById(id)?.remove());\n    alertsDiv.remove();\n    alertsDiv = undefined;\n}\n\nfunction instructionToHiddenDiv(id, txt) {\n    const div = document.createElement(\"div\");\n    div.id = id;\n    div.innerHTML = `<p>${txt}</p>`;\n    div.style.display = \"none\";\n    div.style.position = \"fixed\";\n    div.style.zIndex = \"-5\";\n    return div;\n}\n\n/**\n * Will make the screen reader alert the provided text to the user\n * @param {string} txt\n */\nexport function alertToScreenReader(txt) {\n    if (isOnServer) return;\n    if (!alertsDiv) {\n        initAriaOnBrowser();\n    }\n    alertsDiv.innerHTML = \"\";\n    const alertText = document.createTextNode(txt);\n    alertsDiv.appendChild(alertText);\n    // this is needed for Safari\n    alertsDiv.style.display = \"none\";\n    alertsDiv.style.display = \"inline\";\n}\n","import {decrementActiveDropZoneCount, incrementActiveDropZoneCount, ITEM_ID_KEY, SOURCES, TRIGGERS} from \"./constants\";\nimport {styleActiveDropZones, styleInactiveDropZones} from \"./helpers/styler\";\nimport {dispatchConsiderEvent, dispatchFinalizeEvent} from \"./helpers/dispatcher\";\nimport {initAria, alertToScreenReader, destroyAria} from \"./helpers/aria\";\nimport {toString} from \"./helpers/util\";\nimport {printDebug} from \"./constants\";\n\nconst DEFAULT_DROP_ZONE_TYPE = \"--any--\";\nconst DEFAULT_DROP_TARGET_STYLE = {\n    outline: \"rgba(255, 255, 102, 0.7) solid 2px\"\n};\n\nlet isDragging = false;\nlet draggedItemType;\nlet focusedDz;\nlet focusedDzLabel = \"\";\nlet focusedItem;\nlet focusedItemId;\nlet focusedItemLabel = \"\";\nconst allDragTargets = new WeakSet();\nconst elToKeyDownListeners = new WeakMap();\nconst elToFocusListeners = new WeakMap();\nconst dzToHandles = new Map();\nconst dzToConfig = new Map();\nconst typeToDropZones = new Map();\n\n/* TODO (potentially)\n * what's the deal with the black border of voice-reader not following focus?\n * maybe keep focus on the last dragged item upon drop?\n */\n\nlet INSTRUCTION_IDs;\n\n/* drop-zones registration management */\nfunction registerDropZone(dropZoneEl, type) {\n    printDebug(() => \"registering drop-zone if absent\");\n    if (typeToDropZones.size === 0) {\n        printDebug(() => \"adding global keydown and click handlers\");\n        INSTRUCTION_IDs = initAria();\n        window.addEventListener(\"keydown\", globalKeyDownHandler);\n        window.addEventListener(\"click\", globalClickHandler);\n    }\n    if (!typeToDropZones.has(type)) {\n        typeToDropZones.set(type, new Set());\n    }\n    if (!typeToDropZones.get(type).has(dropZoneEl)) {\n        typeToDropZones.get(type).add(dropZoneEl);\n        incrementActiveDropZoneCount();\n    }\n}\nfunction unregisterDropZone(dropZoneEl, type) {\n    printDebug(() => \"unregistering drop-zone\");\n    if (focusedDz === dropZoneEl) {\n        handleDrop();\n    }\n    typeToDropZones.get(type).delete(dropZoneEl);\n    decrementActiveDropZoneCount();\n    if (typeToDropZones.get(type).size === 0) {\n        typeToDropZones.delete(type);\n    }\n    if (typeToDropZones.size === 0) {\n        printDebug(() => \"removing global keydown and click handlers\");\n        window.removeEventListener(\"keydown\", globalKeyDownHandler);\n        window.removeEventListener(\"click\", globalClickHandler);\n        INSTRUCTION_IDs = undefined;\n        destroyAria();\n    }\n}\n\nfunction globalKeyDownHandler(e) {\n    if (!isDragging) return;\n    switch (e.key) {\n        case \"Escape\": {\n            handleDrop();\n            break;\n        }\n    }\n}\n\nfunction globalClickHandler() {\n    if (!isDragging) return;\n    if (!allDragTargets.has(document.activeElement)) {\n        printDebug(() => \"clicked outside of any draggable\");\n        handleDrop();\n    }\n}\n\nfunction handleZoneFocus(e) {\n    printDebug(() => \"zone focus\");\n    if (!isDragging) return;\n    const newlyFocusedDz = e.currentTarget;\n    if (newlyFocusedDz === focusedDz) return;\n\n    focusedDzLabel = newlyFocusedDz.getAttribute(\"aria-label\") || \"\";\n    const {items: originItems} = dzToConfig.get(focusedDz);\n    const originItem = originItems.find(item => item[ITEM_ID_KEY] === focusedItemId);\n    const originIdx = originItems.indexOf(originItem);\n    const itemToMove = originItems.splice(originIdx, 1)[0];\n    const {items: targetItems, autoAriaDisabled} = dzToConfig.get(newlyFocusedDz);\n    if (\n        newlyFocusedDz.getBoundingClientRect().top < focusedDz.getBoundingClientRect().top ||\n        newlyFocusedDz.getBoundingClientRect().left < focusedDz.getBoundingClientRect().left\n    ) {\n        targetItems.push(itemToMove);\n        if (!autoAriaDisabled) {\n            alertToScreenReader(`Moved item ${focusedItemLabel} to the end of the list ${focusedDzLabel}`);\n        }\n    } else {\n        targetItems.unshift(itemToMove);\n        if (!autoAriaDisabled) {\n            alertToScreenReader(`Moved item ${focusedItemLabel} to the beginning of the list ${focusedDzLabel}`);\n        }\n    }\n    const dzFrom = focusedDz;\n    dispatchFinalizeEvent(dzFrom, originItems, {trigger: TRIGGERS.DROPPED_INTO_ANOTHER, id: focusedItemId, source: SOURCES.KEYBOARD});\n    dispatchFinalizeEvent(newlyFocusedDz, targetItems, {trigger: TRIGGERS.DROPPED_INTO_ZONE, id: focusedItemId, source: SOURCES.KEYBOARD});\n    focusedDz = newlyFocusedDz;\n}\n\nfunction triggerAllDzsUpdate() {\n    dzToHandles.forEach(({update}, dz) => update(dzToConfig.get(dz)));\n}\n\nfunction handleDrop(dispatchConsider = true) {\n    printDebug(() => \"drop\");\n    if (!dzToConfig.get(focusedDz).autoAriaDisabled) {\n        alertToScreenReader(`Stopped dragging item ${focusedItemLabel}`);\n    }\n    if (allDragTargets.has(document.activeElement)) {\n        document.activeElement.blur();\n    }\n    if (dispatchConsider) {\n        dispatchConsiderEvent(focusedDz, dzToConfig.get(focusedDz).items, {\n            trigger: TRIGGERS.DRAG_STOPPED,\n            id: focusedItemId,\n            source: SOURCES.KEYBOARD\n        });\n    }\n    styleInactiveDropZones(\n        typeToDropZones.get(draggedItemType),\n        dz => dzToConfig.get(dz).dropTargetStyle,\n        dz => dzToConfig.get(dz).dropTargetClasses\n    );\n    focusedItem = null;\n    focusedItemId = null;\n    focusedItemLabel = \"\";\n    draggedItemType = null;\n    focusedDz = null;\n    focusedDzLabel = \"\";\n    isDragging = false;\n    triggerAllDzsUpdate();\n}\n//////\nexport function dndzone(node, options) {\n    const config = {\n        items: undefined,\n        type: undefined,\n        dragDisabled: false,\n        zoneTabIndex: 0,\n        zoneItemTabIndex: 0,\n        dropFromOthersDisabled: false,\n        dropTargetStyle: DEFAULT_DROP_TARGET_STYLE,\n        dropTargetClasses: [],\n        autoAriaDisabled: false\n    };\n\n    function swap(arr, i, j) {\n        if (arr.length <= 1) return;\n        arr.splice(j, 1, arr.splice(i, 1, arr[j])[0]);\n    }\n\n    function handleKeyDown(e) {\n        printDebug(() => [\"handling key down\", e.key]);\n        switch (e.key) {\n            case \"Enter\":\n            case \" \": {\n                // we don't want to affect nested input elements or clickable elements\n                if ((e.target.disabled !== undefined || e.target.href || e.target.isContentEditable) && !allDragTargets.has(e.target)) {\n                    return;\n                }\n                e.preventDefault(); // preventing scrolling on spacebar\n                e.stopPropagation();\n                if (isDragging) {\n                    // TODO - should this trigger a drop? only here or in general (as in when hitting space or enter outside of any zone)?\n                    handleDrop();\n                } else {\n                    // drag start\n                    handleDragStart(e);\n                }\n                break;\n            }\n            case \"ArrowDown\":\n            case \"ArrowRight\": {\n                if (!isDragging) return;\n                e.preventDefault(); // prevent scrolling\n                e.stopPropagation();\n                const {items} = dzToConfig.get(node);\n                const children = Array.from(node.children);\n                const idx = children.indexOf(e.currentTarget);\n                printDebug(() => [\"arrow down\", idx]);\n                if (idx < children.length - 1) {\n                    if (!config.autoAriaDisabled) {\n                        alertToScreenReader(`Moved item ${focusedItemLabel} to position ${idx + 2} in the list ${focusedDzLabel}`);\n                    }\n                    swap(items, idx, idx + 1);\n                    dispatchFinalizeEvent(node, items, {trigger: TRIGGERS.DROPPED_INTO_ZONE, id: focusedItemId, source: SOURCES.KEYBOARD});\n                }\n                break;\n            }\n            case \"ArrowUp\":\n            case \"ArrowLeft\": {\n                if (!isDragging) return;\n                e.preventDefault(); // prevent scrolling\n                e.stopPropagation();\n                const {items} = dzToConfig.get(node);\n                const children = Array.from(node.children);\n                const idx = children.indexOf(e.currentTarget);\n                printDebug(() => [\"arrow up\", idx]);\n                if (idx > 0) {\n                    if (!config.autoAriaDisabled) {\n                        alertToScreenReader(`Moved item ${focusedItemLabel} to position ${idx} in the list ${focusedDzLabel}`);\n                    }\n                    swap(items, idx, idx - 1);\n                    dispatchFinalizeEvent(node, items, {trigger: TRIGGERS.DROPPED_INTO_ZONE, id: focusedItemId, source: SOURCES.KEYBOARD});\n                }\n                break;\n            }\n        }\n    }\n    function handleDragStart(e) {\n        printDebug(() => \"drag start\");\n        setCurrentFocusedItem(e.currentTarget);\n        focusedDz = node;\n        draggedItemType = config.type;\n        isDragging = true;\n        const dropTargets = Array.from(typeToDropZones.get(config.type)).filter(dz => dz === focusedDz || !dzToConfig.get(dz).dropFromOthersDisabled);\n        styleActiveDropZones(\n            dropTargets,\n            dz => dzToConfig.get(dz).dropTargetStyle,\n            dz => dzToConfig.get(dz).dropTargetClasses\n        );\n        if (!config.autoAriaDisabled) {\n            let msg = `Started dragging item ${focusedItemLabel}. Use the arrow keys to move it within its list ${focusedDzLabel}`;\n            if (dropTargets.length > 1) {\n                msg += `, or tab to another list in order to move the item into it`;\n            }\n            alertToScreenReader(msg);\n        }\n        dispatchConsiderEvent(node, dzToConfig.get(node).items, {trigger: TRIGGERS.DRAG_STARTED, id: focusedItemId, source: SOURCES.KEYBOARD});\n        triggerAllDzsUpdate();\n    }\n\n    function handleClick(e) {\n        if (!isDragging) return;\n        if (e.currentTarget === focusedItem) return;\n        e.stopPropagation();\n        handleDrop(false);\n        handleDragStart(e);\n    }\n    function setCurrentFocusedItem(draggableEl) {\n        const {items} = dzToConfig.get(node);\n        const children = Array.from(node.children);\n        const focusedItemIdx = children.indexOf(draggableEl);\n        focusedItem = draggableEl;\n        focusedItem.tabIndex = config.zoneItemTabIndex;\n        focusedItemId = items[focusedItemIdx][ITEM_ID_KEY];\n        focusedItemLabel = children[focusedItemIdx].getAttribute(\"aria-label\") || \"\";\n    }\n\n    function configure({\n        items = [],\n        type: newType = DEFAULT_DROP_ZONE_TYPE,\n        dragDisabled = false,\n        zoneTabIndex = 0,\n        zoneItemTabIndex = 0,\n        dropFromOthersDisabled = false,\n        dropTargetStyle = DEFAULT_DROP_TARGET_STYLE,\n        dropTargetClasses = [],\n        autoAriaDisabled = false\n    }) {\n        config.items = [...items];\n        config.dragDisabled = dragDisabled;\n        config.dropFromOthersDisabled = dropFromOthersDisabled;\n        config.zoneTabIndex = zoneTabIndex;\n        config.zoneItemTabIndex = zoneItemTabIndex;\n        config.dropTargetStyle = dropTargetStyle;\n        config.dropTargetClasses = dropTargetClasses;\n        config.autoAriaDisabled = autoAriaDisabled;\n        if (config.type && newType !== config.type) {\n            unregisterDropZone(node, config.type);\n        }\n        config.type = newType;\n        registerDropZone(node, newType);\n        if (!autoAriaDisabled) {\n            node.setAttribute(\"aria-disabled\", dragDisabled);\n            node.setAttribute(\"role\", \"list\");\n            node.setAttribute(\"aria-describedby\", dragDisabled ? INSTRUCTION_IDs.DND_ZONE_DRAG_DISABLED : INSTRUCTION_IDs.DND_ZONE_ACTIVE);\n        }\n        dzToConfig.set(node, config);\n\n        if (isDragging) {\n            node.tabIndex =\n                node === focusedDz ||\n                focusedItem.contains(node) ||\n                config.dropFromOthersDisabled ||\n                (focusedDz && config.type !== dzToConfig.get(focusedDz).type)\n                    ? -1\n                    : 0;\n        } else {\n            node.tabIndex = config.zoneTabIndex;\n        }\n\n        node.addEventListener(\"focus\", handleZoneFocus);\n\n        for (let i = 0; i < node.children.length; i++) {\n            const draggableEl = node.children[i];\n            allDragTargets.add(draggableEl);\n            draggableEl.tabIndex = isDragging ? -1 : config.zoneItemTabIndex;\n            if (!autoAriaDisabled) {\n                draggableEl.setAttribute(\"role\", \"listitem\");\n            }\n            draggableEl.removeEventListener(\"keydown\", elToKeyDownListeners.get(draggableEl));\n            draggableEl.removeEventListener(\"click\", elToFocusListeners.get(draggableEl));\n            if (!dragDisabled) {\n                draggableEl.addEventListener(\"keydown\", handleKeyDown);\n                elToKeyDownListeners.set(draggableEl, handleKeyDown);\n                draggableEl.addEventListener(\"click\", handleClick);\n                elToFocusListeners.set(draggableEl, handleClick);\n            }\n            if (isDragging && config.items[i][ITEM_ID_KEY] === focusedItemId) {\n                printDebug(() => [\"focusing on\", {i, focusedItemId}]);\n                // if it is a nested dropzone, it was re-rendered and we need to refresh our pointer\n                focusedItem = draggableEl;\n                focusedItem.tabIndex = config.zoneItemTabIndex;\n                // without this the element loses focus if it moves backwards in the list\n                draggableEl.focus();\n            }\n        }\n    }\n    configure(options);\n\n    const handles = {\n        update: newOptions => {\n            printDebug(() => `keyboard dndzone will update newOptions: ${toString(newOptions)}`);\n            configure(newOptions);\n        },\n        destroy: () => {\n            printDebug(() => \"keyboard dndzone will destroy\");\n            unregisterDropZone(node, config.type);\n            dzToConfig.delete(node);\n            dzToHandles.delete(node);\n        }\n    };\n    dzToHandles.set(node, handles);\n    return handles;\n}\n","import {dndzone as pointerDndZone} from \"./pointerAction\";\nimport {dndzone as keyboardDndZone} from \"./keyboardAction\";\nimport {ITEM_ID_KEY, SHADOW_ELEMENT_HINT_ATTRIBUTE_NAME} from \"./constants\";\nimport {toString} from \"./helpers/util\";\n\n/**\n * A custom action to turn any container to a dnd zone and all of its direct children to draggables\n * Supports mouse, touch and keyboard interactions.\n * Dispatches two events that the container is expected to react to by modifying its list of items,\n * which will then feed back in to this action via the update function\n *\n * @typedef {object} Options\n * @property {array} items - the list of items that was used to generate the children of the given node (the list used in the #each block\n * @property {string} [type] - the type of the dnd zone. children dragged from here can only be dropped in other zones of the same type, default to a base type\n * @property {number} [flipDurationMs] - if the list animated using flip (recommended), specifies the flip duration such that everything syncs with it without conflict, defaults to zero\n * @property {boolean} [dragDisabled]\n * @property {boolean} [morphDisabled] - whether dragged element should morph to zone dimensions\n * @property {boolean} [dropFromOthersDisabled]\n * @property {number} [zoneTabIndex] - set the tabindex of the list container when not dragging\n * @property {number} [zoneItemTabIndex] - set the tabindex of the list container items when not dragging\n * @property {object} [dropTargetStyle]\n * @property {string[]} [dropTargetClasses]\n * @property {function} [transformDraggedElement]\n * @param {HTMLElement} node - the element to enhance\n * @param {Options} options\n * @return {{update: function, destroy: function}}\n */\nexport function dndzone(node, options) {\n    if (shouldIgnoreZone(node)) {\n        return {\n            update: () => {},\n            destroy: () => {}\n        };\n    }\n    validateOptions(options);\n    const pointerZone = pointerDndZone(node, options);\n    const keyboardZone = keyboardDndZone(node, options);\n    return {\n        update: newOptions => {\n            validateOptions(newOptions);\n            pointerZone.update(newOptions);\n            keyboardZone.update(newOptions);\n        },\n        destroy: () => {\n            pointerZone.destroy();\n            keyboardZone.destroy();\n        }\n    };\n}\n\n/**\n * If the user marked something in the ancestry of our node as shadow element, we can ignore it\n * We need the user to mark it for us because svelte updates the action from deep to shallow (but renders top down)\n * @param {HTMLElement} node\n * @return {boolean}\n */\nfunction shouldIgnoreZone(node) {\n    return !!node.closest(`[${SHADOW_ELEMENT_HINT_ATTRIBUTE_NAME}=\"true\"]`);\n}\n\nfunction validateOptions(options) {\n    /*eslint-disable*/\n    const {\n        items,\n        flipDurationMs,\n        type,\n        dragDisabled,\n        morphDisabled,\n        dropFromOthersDisabled,\n        zoneTabIndex,\n        zoneItemTabIndex,\n        dropTargetStyle,\n        dropTargetClasses,\n        transformDraggedElement,\n        autoAriaDisabled,\n        centreDraggedOnCursor,\n        ...rest\n    } = options;\n    /*eslint-enable*/\n    if (Object.keys(rest).length > 0) {\n        console.warn(`dndzone will ignore unknown options`, rest);\n    }\n    if (!items) {\n        throw new Error(\"no 'items' key provided to dndzone\");\n    }\n    const itemWithMissingId = items.find(item => !{}.hasOwnProperty.call(item, ITEM_ID_KEY));\n    if (itemWithMissingId) {\n        throw new Error(`missing '${ITEM_ID_KEY}' property for item ${toString(itemWithMissingId)}`);\n    }\n    if (dropTargetClasses && !Array.isArray(dropTargetClasses)) {\n        throw new Error(`dropTargetClasses should be an array but instead it is a ${typeof dropTargetClasses}, ${toString(dropTargetClasses)}`);\n    }\n    if (zoneTabIndex && !isInt(zoneTabIndex)) {\n        throw new Error(`zoneTabIndex should be a number but instead it is a ${typeof zoneTabIndex}, ${toString(zoneTabIndex)}`);\n    }\n    if (zoneItemTabIndex && !isInt(zoneItemTabIndex)) {\n        throw new Error(`zoneItemTabIndex should be a number but instead it is a ${typeof zoneItemTabIndex}, ${toString(zoneItemTabIndex)}`);\n    }\n}\n\nfunction isInt(value) {\n    return (\n        !isNaN(value) &&\n        (function (x) {\n            return (x | 0) === x;\n        })(parseFloat(value))\n    );\n}\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicOut } from '../easing/index.mjs';\nimport { is_function } from '../internal/index.mjs';\n\nfunction flip(node, { from, to }, params = {}) {\n    const style = getComputedStyle(node);\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n    const dx = (from.left + from.width * ox / to.width) - (to.left + ox);\n    const dy = (from.top + from.height * oy / to.height) - (to.top + oy);\n    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n    return {\n        delay,\n        duration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,\n        easing,\n        css: (t, u) => {\n            const x = u * dx;\n            const y = u * dy;\n            const sx = t + u * from.width / to.width;\n            const sy = t + u * from.height / to.height;\n            return `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;\n        }\n    };\n}\n\nexport { flip };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","<script>\n    export let letter;\n    export let className;\n</script>\n\n<div class=\"{className} tile\">\n    <div class=\"letter no-select\">\n        <b>{letter}</b>\n    </div>\n</div>\n\n<style>\n    :global(.tile) {\n        height: calc(min(5vmin, 50px) - 2px);\n        width: calc(min(10vmin, 100px) - 4px);\n        /* border: 2px solid #272727; */\n        border-radius: calc(min(5vmin, 50px) / 6.25);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        /* background-color: #ffebeb; */\n    }\n\n    .letter {\n        font-size: 2vmin;\n        /* color: #707070; */\n        color: black;\n    }\n\n    :global(.r) {\n        width: calc(min(5vmin, 50px) - 2px);\n        background: color-mix(in srgb, #dc3546 69%, #272727);\n    }\n    :global(.R) {\n        width: calc(min(5vmin, 50px) - 2px);\n        background: #dc3546;\n    }\n    :global(.W) {\n        background-color: aliceblue;\n    }\n\n    :global(.B) {\n        background-color: cornflowerblue;\n    }\n</style>\n","<script>\n    import {\n        dndzone,\n        TRIGGERS,\n        SHADOW_ITEM_MARKER_PROPERTY_NAME,\n    } from \"svelte-dnd-action\";\n    // import { boardGrid } from \"./store\";\n    import Tile from \"./Tile.svelte\";\n    import { writable } from \"svelte/store\";\n\n    export let id;\n    export let letters;\n\n    let items = [];\n    const background = \"rgba(255, 255, 255, 0.2)\";\n\n    let currentId = 0;\n    let previousId = writable(0);\n    let previousIdForOpacity = writable(undefined);\n    const flipDurationMs = 10;\n    // $: prevId = $previousId;\n\n    function handleDndConsider(e) {\n        const id = parseInt(e.target.id);\n        const { trigger } = e.detail.info;\n        const itemList = e.detail.items;\n        const height = $letters.length;\n        const y = Math.floor(id / height);\n        const x = id % height;\n\n        // console.log(e.detail);\n        // console.log(itemList[0].letters.toLowerCase());\n\n        console.log(trigger);\n        if (trigger === TRIGGERS.DRAGGED_LEFT) {\n            const square = document.getElementById(currentId + height);\n            if (square) square.style.backgroundColor = \"#404040\";\n\n            const previousSquare = document.getElementById($previousId);\n            console.log($previousId);\n            if (previousSquare)\n                previousSquare.style.backgroundColor = \"#404040\";\n\n            // const previousLeftSquare = document.getElementById(\n            //     $previousIdForOpacity\n            // );\n            // if (previousLeftSquare) previousLeftSquare.style.opacity = 0;\n            // console.log(previousLeftSquare, $previousIdForOpacity);\n            // } else if (trigger === TRIGGERS.DRAG_STARTED) {\n            //     const square = document.getElementById(id + height);\n            //     console.log(square);\n            //     if (square) square.style.backgroundColor = \"#404040\";\n        } else if (trigger !== TRIGGERS.DRAG_STARTED) {\n            if (itemList[0] && itemList[0].letter.toLowerCase() !== \"r\") {\n                const square = document.getElementById(id + height);\n                if (square) {\n                    square.style.opacity = 1;\n                    square.style.backgroundColor = background;\n                }\n                console.log(square);\n\n                currentId = id;\n            }\n        } else if (trigger === TRIGGERS.DRAG_STARTED) {\n            $letters[x][y] = \"X\";\n        }\n        console.log($letters[x][y - 1]);\n        if (\n            $letters[x][y - 1] &&\n            ($letters[x][y - 1] === \"W\" || $letters[x][y - 1] === \"B\")\n        ) {\n            // $previousIdForOpacity = id;\n            console.warn(\"HI\");\n            window.setTimeout(() => {\n                document.getElementById(id).style.opacity = 0;\n            }, 1);\n        }\n        items = e.detail.items;\n        // if ($letters[x][y - 1] !== \"X\")\n        //     document.getElementById(id).style.opacity = 0;\n    }\n    function handleDndFinalize(e) {\n        const id = parseInt(e.target.id);\n        // console.log(id);\n        const height = $letters.length;\n        const y = Math.floor(id / height); // the x values in the array are the columns in the elements, vice versa\n        const x = id % height; // It works hence you will not change it.\n        // I have y and x switched bc the letters must be [row][column] (see the example files), so x is actually y\n        // console.log(e.detail.items[0].letter);\n        previousId.set(id + height);\n\n        console.log(e);\n        console.log($previousId);\n\n        if (e.detail.info.trigger === TRIGGERS.DROPPED_INTO_ZONE) {\n            const new_letter = e.detail.items[0].letter;\n            // $letters[x][y + 1] = new_letter;\n            const isR = new_letter.toLowerCase() === \"r\";\n            let rightSquare = document.getElementById(id + height);\n\n            if (\n                rightSquare &&\n                !isR &&\n                (rightSquare.hasChildNodes() ||\n                    $letters[x][y - 1] === \"W\" ||\n                    $letters[x][y - 1] === \"B\")\n            )\n                rightSquare = false; // to ensure that it's not possible to drag one onto another\n            console.log(rightSquare, $letters[x][y - 1] !== \"X\");\n            $letters[x][y] = new_letter;\n            // if (rightSquare === false &&)\n            // console.log($letters[x][y]);\n            // if (\n            //     rightSquare === false &&\n            //     ($letters[x][y] === \"W\" || $letters[x][y] === \"B\")\n            // ) {\n            //     rightSquare = NaN; // to ensure that it's not possible to drag an \"r\" (or \"R\") onto another\n            // }\n\n            console.log(rightSquare);\n            if (rightSquare && !isR) rightSquare.style.opacity = 0;\n            console.log(rightSquare, typeof rightSquare);\n            if (rightSquare === false || (rightSquare === undefined && !isR)) {\n                window.setTimeout(() => {\n                    items = [];\n                    rightSquare === false\n                        ? (document.getElementById(id).style.opacity = 0)\n                        : (document.getElementById(id).style.opacity = 1);\n                }, flipDurationMs);\n                items = e.detail.items;\n                $letters[x][y] = \"X\";\n                console.warn(e);\n                return;\n            }\n\n            // $previousIdForLetterArray = id;\n            // console.log(id, $previousId, $previousIdForLetterArray);\n        } else if (e.detail.info.trigger === TRIGGERS.DROPPED_OUTSIDE_OF_ANY) {\n            const new_letter = e.detail.items[0].letter;\n            const rightSquare =\n                new_letter.toLowerCase() === \"r\"\n                    ? false\n                    : document.getElementById(id + height);\n            if (rightSquare) rightSquare.style.opacity = 0;\n        } else {\n            $letters[x][y] = \"X\";\n        }\n        // console.log($letters[x][y], length, height, x, y);\n        // console.log($letters);\n        document.getElementById(\"rack\").style.opacity = 1;\n        const prevSquare = document.getElementById(id + height);\n        if (prevSquare) prevSquare.style.backgroundColor = \"#404040\";\n\n        items = e.detail.items;\n    }\n\n    $: options = {\n        dropFromOthersDisabled: items.length,\n        items,\n        dropTargetStyle: {},\n        flipDurationMs,\n    };\n\n    // $: console.log(items);\n</script>\n\n<div\n    class=\"square\"\n    {id}\n    style={items.find((tile) => tile[SHADOW_ITEM_MARKER_PROPERTY_NAME])\n        ? `background: ${background}`\n        : \"\"}\n    use:dndzone={options}\n    on:consider={handleDndConsider}\n    on:finalize={handleDndFinalize}\n>\n    {#each items as tile (tile.id)}\n        <Tile letter={tile.letter} className={tile.letter[0]} />\n    {/each}\n</div>\n\n<style>\n    .square {\n        border: 2px solid #272727;\n        height: calc(min(5vmin, 50px));\n        width: calc(min(5vmin, 50px));\n        border-radius: calc(min(5vmin, 50px) / 6.25);\n        background-color: #404040;\n    }\n</style>\n","<script>\n    export let id;\n    // export let isOn;\n    export let ledGrid;\n    let toogle = () => {\n        ledGrid[id].isOn = !ledGrid[id].isOn;\n    };\n</script>\n\n<div\n    class=\"led no-select\"\n    on:mousedown={toogle}\n    style=\"background:{ledGrid[id].isOn ? '#198754' : 'red'}\"\n>\n    <h4>{id}</h4>\n</div>\n\n<style>\n    .led {\n        border: 1px solid #272727;\n        height: calc(2px + min(5vmin, 50px));\n        width: 5vmin;\n        border-radius: calc(min(5vmin, 50px) / 6.25);\n        border-bottom-right-radius: 0;\n        border-bottom-left-radius: 0;\n    }\n</style>\n","<script>\n    export let id;\n    export let ledGridOut;\n</script>\n\n<div\n    class=\"led no-select\"\n    style=\"background:{ledGridOut[id].isOn ? '#198754' : 'red'}\"\n>\n    <h4>{id}</h4>\n</div>\n\n<style>\n    .led {\n        border: 1px solid #272727;\n        height: calc(2px + min(5vmin, 50px));\n        width: 5vmin;\n        border-radius: calc(min(5vmin, 50px) / 6.25);\n        border-top-right-radius: 0;\n        border-top-left-radius: 0;\n    }\n</style>\n","<script>\n\timport {\n\t\tdndzone,\n\t\tTRIGGERS,\n\t\tSHADOW_ITEM_MARKER_PROPERTY_NAME,\n\t} from \"svelte-dnd-action\";\n\timport { flip } from \"svelte/animate\";\n\timport { writable } from \"svelte/store\";\n\n\timport Tile from \"./Tile.svelte\";\n\timport Square from \"./Square.svelte\";\n\timport Led from \"./Led.svelte\";\n\timport LedOut from \"./LedOut.svelte\";\n\n\tlet idx = 0;\n\n\tlet items = [\n\t\t{ id: idx++, letter: \"W\" },\n\t\t{ id: idx++, letter: \"r\" },\n\t\t{ id: idx++, letter: \"R\" },\n\t\t{ id: idx++, letter: \"B\" },\n\t];\n\n\tlet length = writable(6);\n\tlet height = 5;\n\tlet shouldIgnoreDndEvents = false;\n\n\tfunction handleDndConsider(e) {\n\t\t// console.warn(`got consider ${JSON.stringify(e.detail, null, 2)}`);\n\t\tconst { trigger, id } = e.detail.info;\n\t\tif (trigger === TRIGGERS.DRAG_STARTED) {\n\t\t\tconsole.warn(`copying ${id}`);\n\t\t\tconst idx = items.findIndex((item) => item.id === id);\n\t\t\tconst newId = `${id}_copy_${Math.round(Math.random() * 100000)}`;\n\t\t\te.detail.items = e.detail.items.filter(\n\t\t\t\t(item) => !item[SHADOW_ITEM_MARKER_PROPERTY_NAME]\n\t\t\t);\n\t\t\te.detail.items.splice(idx, 0, { ...items[idx], id: newId });\n\t\t\titems = e.detail.items;\n\t\t\tshouldIgnoreDndEvents = true;\n\t\t} else if (!shouldIgnoreDndEvents) {\n\t\t\titems = e.detail.items;\n\t\t} else {\n\t\t\titems = [...items];\n\t\t}\n\t}\n\tfunction handleDndFinalize(e) {\n\t\t// console.warn(`got finalize ${JSON.stringify(e.detail, null, 2)}`);\n\t\tconst { id } = e.detail.info;\n\t\tif (!shouldIgnoreDndEvents) {\n\t\t\twindow.setTimeout(() => {\n\t\t\t\titems = items.filter(\n\t\t\t\t\t(i) => !i.id.toString().startsWith(`${id}_copy`)\n\t\t\t\t);\n\t\t\t}, flipDurationMs);\n\t\t\titems = e.detail.items;\n\t\t} else {\n\t\t\titems = [...items];\n\t\t\tdocument.getElementById(\"rack\").style.opacity = 1;\n\t\t\tshouldIgnoreDndEvents = false;\n\t\t}\n\t}\n\n\t$: boardGrid = writable(\n\t\tArray.from({ length: $length }, (_, i) =>\n\t\t\tArray.from({ length: height }, (_, j) => ({\n\t\t\t\tid: i * height + j,\n\t\t\t}))\n\t\t)\n\t);\n\n\tlet letters = writable(\n\t\tArray.from({ length: height }, () =>\n\t\t\tArray.from({ length: $length }, () => \"X\")\n\t\t)\n\t);\n\n\tfunction incrementBoardGridHeight(_e) {\n\t\theight += 1;\n\t\t$letters.push(Array.from({ height }, () => \"X\"));\n\t}\n\tfunction decrementBoardGridHeight(_e) {\n\t\theight -= 1;\n\t\t$letters.pop();\n\t}\n\tfunction incrementBoardGridLength(_e) {\n\t\t$length += 1;\n\t\t$letters.forEach((array) => array.push(\"X\"));\n\t}\n\tfunction decrementBoardGridLength(_e) {\n\t\t$length -= 1;\n\t\t$letters.forEach((array) => array.pop());\n\t}\n\t// of type { id: number, isOn: bool}\n\t$: ledGrid = Array.from({ length: $length }, (_, i) =>\n\t\tObject.create({\n\t\t\tid: i,\n\t\t\tisOn: false,\n\t\t})\n\t);\n\n\tfunction run(e) {\n\t\tif (e.key && e.key !== \"Enter\") return;\n\n\t\t// const updatedLetters = $letters.map((col) => {\n\t\t// \tconsole.log(\n\t\t// \t\tcol.every((x) => x === \"X\"),\n\t\t// \t\tcol\n\t\t// \t);\n\t\t// \tif (col.every((x) => x === \"X\")) return;\n\t\t// \telse col;\n\t\t// });\n\t\t// console.log(updatedLetters);\n\n\t\tconst leds = ledGrid\n\t\t\t.map((led) => {\n\t\t\t\tif (led.isOn) return `Q${led.id}`;\n\t\t\t\telse return \"X\";\n\t\t\t})\n\t\t\t.join(\" \");\n\t\tconst code = $letters\n\t\t\t.map((col, idx) =>\n\t\t\t\tcol.map((element, jdx) => {\n\t\t\t\t\tconst prevElement = $letters[idx][jdx - 1];\n\t\t\t\t\tif (prevElement === \"W\" || prevElement === \"B\")\n\t\t\t\t\t\treturn prevElement;\n\t\t\t\t\telse return element;\n\t\t\t\t})\n\t\t\t)\n\t\t\t.join(\"\\n\")\n\t\t\t.replaceAll(\",\", \" \");\n\n\t\tconsole.log(code);\n\n\t\tconst program = [$length, height, leds, code].join(\"\\n\");\n\t\tconsole.log(program);\n\t}\n\n\t// of type { id: number, isOn: bool}\n\tlet ledGridOut = Array.from({ length: $length }, (_, i) =>\n\t\tObject.create({\n\t\t\tid: i,\n\t\t\tisOn: false,\n\t\t})\n\t);\n\n\tconst flipDurationMs = 10;\n\n\t$: options = {\n\t\titems,\n\t\tflipDurationMs,\n\t\tmorphDisabled: true,\n\t};\n</script>\n\n<svelte:window on:keydown={run} />\n<div class=\"program-container\">\n\t<div class=\"column\" style=\"margin: 3em;\">\n\t\t<div class=\"grid\">\n\t\t\t{#each ledGrid as led}\n\t\t\t\t<Led id={led.id} bind:ledGrid />\n\t\t\t{/each}\n\t\t</div>\n\t\t<div class=\"gridContainer\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"decrementLength btn btn-outline-secondary\"\n\t\t\t\ton:click={decrementBoardGridLength}><h1>-</h1></button\n\t\t\t>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"decrementHeight btn btn-outline-secondary\"\n\t\t\t\ton:click={decrementBoardGridHeight}\n\t\t\t\t><h1 style=\"margin-bottom: 0px;line-height: 0.9em;\">\n\t\t\t\t\t-\n\t\t\t\t</h1></button\n\t\t\t>\n\t\t\t<div class=\"main grid\">\n\t\t\t\t{#each $boardGrid as col}\n\t\t\t\t\t<div class=\"column\">\n\t\t\t\t\t\t{#each col as row}\n\t\t\t\t\t\t\t<Square id={row.id} bind:letters />\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</div>\n\t\t\t\t{/each}\n\t\t\t</div>\n\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"incrementLength btn btn-outline-secondary\"\n\t\t\t\ton:click={incrementBoardGridLength}><h1>+</h1></button\n\t\t\t>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"incrementHeight btn btn-outline-secondary\"\n\t\t\t\ton:click={incrementBoardGridHeight}\n\t\t\t\t><h1 style=\"margin-bottom: 0px;line-height: 0.9em;\">\n\t\t\t\t\t+\n\t\t\t\t</h1></button\n\t\t\t>\n\t\t</div>\n\t\t<div class=\"grid\">\n\t\t\t{#each ledGridOut as led}\n\t\t\t\t<LedOut id={led.id} bind:ledGridOut />\n\t\t\t{/each}\n\t\t</div>\n\t</div>\n\n\t<div\n\t\tclass=\"rack\"\n\t\tid=\"rack\"\n\t\tuse:dndzone={options}\n\t\tuse:dndzone={{ items, flipDurationMs }}\n\t\ton:consider={handleDndConsider}\n\t\ton:finalize={handleDndFinalize}\n\t>\n\t\t{#each items as item (item.id)}\n\t\t\t<div animate:flip={{ duration: flipDurationMs }}>\n\t\t\t\t<Tile letter={item.letter} className={item.letter[0]} />\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n\t<div class=\"main-container\">\n\t\t<button class=\"btn btn-primary btn-lg\" on:click={run}> run</button>\n\t</div>\n</div>\n\n<style>\n\t:global(body *) {\n\t\tbox-sizing: border-box;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\n\t.program-container {\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tflex-direction: row;\n\t\tjustify-content: center;\n\t\tgap: 1vw;\n\t\talign-items: top;\n\t\tbackground-color: #272727;\n\t}\n\t@media (max-width: 800px) {\n\t\t.program-container {\n\t\t\tflex-direction: column;\n\t\t}\n\t}\n\t.main-container {\n\t\tdisplay: flex;\n\t\theight: 100%;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t.grid {\n\t\t/* border: 2px solid aliceblue; */\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: left;\n\t}\n\t.column {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tflex-direction: column;\n\t}\n\n\t.gridContainer {\n\t\tdisplay: grid;\n\t\talign-items: center;\n\t\tjustify-items: center;\n\t\tgrid-template-columns: auto;\n\t\tgrid-template-rows: auto;\n\t\trow-gap: 0px;\n\t\tgrid-template-areas:\n\t\t\t\". decrementHeight .\"\n\t\t\t\"decrementLength main incrementLength\"\n\t\t\t\". incrementHeight .\";\n\t}\n\t.main {\n\t\tgrid-area: main;\n\t}\n\t.incrementHeight {\n\t\tgrid-area: incrementHeight;\n\t\twidth: 100%;\n\t\theight: 2.6em;\n\t\tpadding: 0;\n\t}\n\t.decrementHeight {\n\t\tgrid-area: decrementHeight;\n\t\twidth: 100%;\n\t\theight: 2.6em;\n\t\tpadding: 0;\n\t}\n\t.incrementLength {\n\t\tgrid-area: incrementLength;\n\t\tpadding: 0;\n\t\twidth: 2.6em;\n\t\theight: 100%;\n\t}\n\t.decrementLength {\n\t\tgrid-area: decrementLength;\n\t\tpadding: 0;\n\t\twidth: 2.6em;\n\t\theight: 100%;\n\t}\n\t.rack {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tflex-direction: column;\n\t\tflex-grow: 0;\n\t\t/* width: calc((min(10vmin, 50px) + 4px) * 7); */\n\t}\n\t.rack > * {\n\t\tmargin: 2px;\n\t}\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'test'\n\t}\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","set_store_value","ret","value","set","action_destroyer","action_result","destroy","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","globals","globalThis","global","append","target","node","appendChild","get_root_for_style","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","sheet","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","name","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","removeProperty","setProperty","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","ownerNode","clear","create_animation","from","params","to","getBoundingClientRect","left","right","top","bottom","easing","start","start_time","end","tick","css","running","started","stop","Promise","fulfill","add","loop","fix_position","getComputedStyle","position","width","height","transform","add_transform","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","flushidx","flush","saved_component","update","e","pop","has","fragment","before_update","dirty","ctx","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","outro_and_destroy_block","lookup","fix_and_outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","deltas","updates","child_ctx","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","bind","index","props","undefined","bound","create_component","mount_component","customElement","new_on_destroy","on_mount","map","destroy_component","filtered","targets","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","skip_bound","ready","rest","hydrate","nodes","Array","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","splice","$set","$$props","obj","$$set","keys","FINALIZE_EVENT_NAME","CONSIDER_EVENT_NAME","dispatchFinalizeEvent","el","items","dispatchEvent","CustomEvent","detail","dispatchConsiderEvent","DRAGGED_ENTERED_EVENT_NAME","DRAGGED_LEFT_EVENT_NAME","DRAGGED_OVER_INDEX_EVENT_NAME","DRAGGED_LEFT_DOCUMENT_EVENT_NAME","DRAGGED_LEFT_TYPES","LEFT_FOR_ANOTHER","OUTSIDE_OF_ANY","dispatchDraggedElementEnteredContainer","containerEl","indexObj","draggedEl","dispatchDraggedElementLeftContainerForAnother","theOtherDz","dispatchDraggedElementIsOverIndex","TRIGGERS","DRAG_STARTED","DRAGGED_ENTERED","DRAGGED_ENTERED_ANOTHER","DRAGGED_OVER_INDEX","DRAGGED_LEFT","DRAGGED_LEFT_ALL","DROPPED_INTO_ZONE","DROPPED_INTO_ANOTHER","DROPPED_OUTSIDE_OF_ANY","DRAG_STOPPED","SOURCES","POINTER","KEYBOARD","SHADOW_ITEM_MARKER_PROPERTY_NAME","SHADOW_ELEMENT_ATTRIBUTE_NAME","SHADOW_ELEMENT_HINT_ATTRIBUTE_NAME","SHADOW_PLACEHOLDER_ITEM_ID","DRAGGED_ELEMENT_ID","ITEM_ID_KEY","activeDndZoneCount","incrementActiveDropZoneCount","decrementActiveDropZoneCount","Error","isOnServer","getBoundingRectNoTransforms","ta","rect","tx","sx","sy","dx","dy","startsWith","slice","transformOrigin","parseFloat","y","w","offsetWidth","h","offsetHeight","getAbsoluteRectNoTransforms","scrollY","scrollX","getAbsoluteRect","findCenter","isPointInsideRect","point","findCenterOfElement","isCenterOfAInsideB","elA","elB","calcDistanceBetweenCenters","centerOfA","centerOfB","pointA","pointB","sqrt","pow","dzToShadowIndexToRect","resetIndexesCache","resetIndexesCacheForDz","dz","findWouldBeIndex","floatingAboveEl","collectionBelowEl","isProximityBased","shadowElIndex","findIndex","child","cacheShadowRect","cachedShadowRect","indexOfMin","minDistanceSoFar","Number","MAX_VALUE","distance","makeScroller","scrollingInfo","resetScrolling","directionObj","stepPx","scrollContainer","scrollBy","calcScrollStepPx","distancePx","scrollIfNeeded","pointer","elementToScroll","distances","min","documentElement","clientWidth","calcInnerDistancesBetweenPointAndSidesOfElement","isAlreadyScrolling","scrollingVertically","scrollingHorizontally","scrollHeight","clientHeight","scrollWidth","toString","object","JSON","stringify","getDepth","_getDepth","countSoFar","parentElement","INTERVAL_MS","TOLERANCE_PX","observe","dropZones","intervalMs","lastDropZoneFound","lastIndexFound","lastCentrePositionOfDragged","lastIsDraggedInADropZone","dropZonesFromDeepToShallow","sort","dz1","dz2","andNow","currentCenterOfDragged","scrolled","setTimeout","isElementOffDocument","dispatchDraggedLeftDocument","isDraggedInADropZone","dispatchDraggedElementLeftContainerForNone","mousePosition","updateMousePosition","touches","clientX","clientY","FEATURE_FLAG_NAMES","freeze","USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT","featureFlagsMap","getFeatureFlag","flagName","TRANSITION_DURATION_SECONDS","trs","property","morphDraggedElementToBeLike","copyFromEl","currentMouseX","currentMouseY","copyStylesFromTo","newRect","draggedElRect","widthChange","heightChange","relativeDistanceOfMousePointerFromDraggedSides","copyToEl","computedStyle","s","getPropertyValue","getPropertyPriority","styleDraggable","draggableEl","dragDisabled","draggable","ondragstart","userSelect","WebkitUserSelect","cursor","hideElement","dragTarget","display","zIndex","styleActiveDropZones","getStyles","getClasses","styles","classList","styleInactiveDropZones","contains","remove","DEFAULT_DROP_ZONE_TYPE","MIN_OBSERVATION_INTERVAL_MS","DISABLED_OBSERVATION_INTERVAL_MS","MIN_MOVEMENT_BEFORE_DRAG_START_PX","DEFAULT_DROP_TARGET_STYLE","outline","ORIGINAL_DRAGGED_ITEM_MARKER_ATTRIBUTE","originalDragTarget","draggedElData","draggedElType","originDropZone","originIndex","shadowElData","shadowElDropZone","dragStartMousePosition","currentMousePosition","unlockOriginDzMinDimensions","isWorkingOnPreviousDrag","finalizingPreviousDrag","isDraggedOutsideOfAnyDz","scheduledForRemovalAfterDrop","typeToDropZones","dzToConfig","elToMouseDownListener","WeakMap","unregisterDropZone","dropZoneEl","watchDraggedElement","handleDraggedEntered","handleDraggedLeft","handleDraggedIsOverIndex","handleDrop","setIntervalMs","max","dropAnimationDurationMs","observationIntervalMs","unWatchDraggedElement","clearTimeout","findShadowElementIdx","item","dropFromOthersDisabled","currentTarget","newOriginZoneItems","trigger","id","source","shadowElIdx","shadowItem","originZoneItems","handleMouseMove","preventDefault","moveDraggedElementToWasDroppedState","dropTargetStyle","dropTargetClasses","shadowElRect","newTransform","transition","animateDraggedToFinalPosition","shadowEl","visibility","cleanupPostDrop","dndzone","initialized","config","flipDurationMs","morphDisabled","transformDraggedElement","centreDraggedOnCursor","elToIdx","removeMaybeListeners","handleMouseMoveMaybeDragStart","handleFalseAlarm","currentIdx","rootNode","originDropZoneRoot","body","keepOriginalElementInDom","focus","originalElement","positionCenterOnXY","cloned","cloneNode","values","elIsSelect","tagName","selects","querySelectorAll","select","clonedSelects","optionEl","querySelector","svelteNodeClone","elTopPx","elLeftPx","center","margin","boxSizing","createDraggedElementFrom","originalMinHeight","minHeight","originalMinWidth","minWidth","preventShrinking","passive","capture","handleDragStart","handleMouseDown","isContentEditable","button","stopPropagation","configure","newType","getConfigProp","propName","objA","objB","keyA","hasOwnProperty","call","areObjectsShallowEqual","arrA","arrB","areArraysShallowEqualSameOrder","idx","newOptions","destroyDz","closest","INSTRUCTION_IDs","DND_ZONE_ACTIVE","DND_ZONE_DRAG_DISABLED","ID_TO_INSTRUCTION","ALERT_DIV_ID","alertsDiv","initAriaOnBrowser","opacity","prepend","entries","txt","div","innerHTML","instructionToHiddenDiv","alertToScreenReader","alertText","draggedItemType","focusedDz","focusedItem","focusedItemId","isDragging","focusedDzLabel","focusedItemLabel","allDragTargets","WeakSet","elToKeyDownListeners","elToFocusListeners","dzToHandles","registerDropZone","readyState","globalKeyDownHandler","globalClickHandler","getElementById","activeElement","handleZoneFocus","newlyFocusedDz","originItems","originItem","find","originIdx","itemToMove","targetItems","autoAriaDisabled","unshift","triggerAllDzsUpdate","dispatchConsider","blur","zoneTabIndex","zoneItemTabIndex","swap","arr","j","handleKeyDown","disabled","href","focusedItemIdx","tabIndex","setCurrentFocusedItem","dropTargets","msg","handleClick","handles","shouldIgnoreZone","validateOptions","pointerZone","pointerDndZone","keyboardZone","keyboardDndZone","console","warn","itemWithMissingId","isArray","isInt","isNaN","cubicOut","flip","ox","oy","u","subscriber_queue","writable","subscribers","new_value","run_queue","subscriber","invalidate","div1","div0","letter","className","tile_changes","div_style_value","background","current","letters","currentId","previousId","parseInt","itemList","$letters","floor","log","square","backgroundColor","previousSquare","$previousId","toLowerCase","$$invalidate","new_letter","isR","rightSquare","hasChildNodes","prevSquare","tile","isOn","h4","ledGrid","ledGridOut","led_props","led_changes","square_props","square_changes","each_blocks","ledout_props","ledout_changes","stop_animation","div7","div4","div2","button0","button1","button2","button3","div3","div5","div6","button4","each_blocks_3","each_blocks_2","each_blocks_1","shouldIgnoreDndEvents","$length","_","boardGrid","newId","round","random","_e","array","leds","led","code","col","jdx","prevElement","replaceAll","program"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}